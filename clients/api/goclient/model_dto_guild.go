/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the DtoGuild type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoGuild{}

// DtoGuild struct for DtoGuild
type DtoGuild struct {
	Icon *DtoIcon `json:"icon,omitempty"`
	// Guild ID
	Id *int32 `json:"id,omitempty"`
	// Guild Name
	Name *string `json:"name,omitempty"`
	// Owner ID
	Owner *int32 `json:"owner,omitempty"`
	// Default guild Permissions. Check the permissions documentation for more info.
	Permissions *int32 `json:"permissions,omitempty"`
	// Whether the guild is public
	Public *bool `json:"public,omitempty"`
}

// NewDtoGuild instantiates a new DtoGuild object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoGuild() *DtoGuild {
	this := DtoGuild{}
	var permissions int32 = 7927905
	this.Permissions = &permissions
	var public bool = false
	this.Public = &public
	return &this
}

// NewDtoGuildWithDefaults instantiates a new DtoGuild object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoGuildWithDefaults() *DtoGuild {
	this := DtoGuild{}
	var permissions int32 = 7927905
	this.Permissions = &permissions
	var public bool = false
	this.Public = &public
	return &this
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *DtoGuild) GetIcon() DtoIcon {
	if o == nil || IsNil(o.Icon) {
		var ret DtoIcon
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGuild) GetIconOk() (*DtoIcon, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *DtoGuild) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given DtoIcon and assigns it to the Icon field.
func (o *DtoGuild) SetIcon(v DtoIcon) {
	o.Icon = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DtoGuild) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGuild) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DtoGuild) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *DtoGuild) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DtoGuild) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGuild) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DtoGuild) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DtoGuild) SetName(v string) {
	o.Name = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *DtoGuild) GetOwner() int32 {
	if o == nil || IsNil(o.Owner) {
		var ret int32
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGuild) GetOwnerOk() (*int32, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *DtoGuild) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given int32 and assigns it to the Owner field.
func (o *DtoGuild) SetOwner(v int32) {
	o.Owner = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *DtoGuild) GetPermissions() int32 {
	if o == nil || IsNil(o.Permissions) {
		var ret int32
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGuild) GetPermissionsOk() (*int32, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *DtoGuild) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given int32 and assigns it to the Permissions field.
func (o *DtoGuild) SetPermissions(v int32) {
	o.Permissions = &v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *DtoGuild) GetPublic() bool {
	if o == nil || IsNil(o.Public) {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGuild) GetPublicOk() (*bool, bool) {
	if o == nil || IsNil(o.Public) {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *DtoGuild) HasPublic() bool {
	if o != nil && !IsNil(o.Public) {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *DtoGuild) SetPublic(v bool) {
	o.Public = &v
}

func (o DtoGuild) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoGuild) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.Public) {
		toSerialize["public"] = o.Public
	}
	return toSerialize, nil
}

type NullableDtoGuild struct {
	value *DtoGuild
	isSet bool
}

func (v NullableDtoGuild) Get() *DtoGuild {
	return v.value
}

func (v *NullableDtoGuild) Set(val *DtoGuild) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoGuild) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoGuild) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoGuild(val *DtoGuild) *NullableDtoGuild {
	return &NullableDtoGuild{value: val, isSet: true}
}

func (v NullableDtoGuild) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoGuild) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
