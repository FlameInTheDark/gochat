/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the DtoGuildInvite type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoGuildInvite{}

// DtoGuildInvite struct for DtoGuildInvite
type DtoGuildInvite struct {
	AuthorId  *int32  `json:"author_id,omitempty"`
	Code      *string `json:"code,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	ExpiresAt *string `json:"expires_at,omitempty"`
	GuildId   *int32  `json:"guild_id,omitempty"`
	Id        *int32  `json:"id,omitempty"`
}

// NewDtoGuildInvite instantiates a new DtoGuildInvite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoGuildInvite() *DtoGuildInvite {
	this := DtoGuildInvite{}
	return &this
}

// NewDtoGuildInviteWithDefaults instantiates a new DtoGuildInvite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoGuildInviteWithDefaults() *DtoGuildInvite {
	this := DtoGuildInvite{}
	return &this
}

// GetAuthorId returns the AuthorId field value if set, zero value otherwise.
func (o *DtoGuildInvite) GetAuthorId() int32 {
	if o == nil || IsNil(o.AuthorId) {
		var ret int32
		return ret
	}
	return *o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGuildInvite) GetAuthorIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AuthorId) {
		return nil, false
	}
	return o.AuthorId, true
}

// HasAuthorId returns a boolean if a field has been set.
func (o *DtoGuildInvite) HasAuthorId() bool {
	if o != nil && !IsNil(o.AuthorId) {
		return true
	}

	return false
}

// SetAuthorId gets a reference to the given int32 and assigns it to the AuthorId field.
func (o *DtoGuildInvite) SetAuthorId(v int32) {
	o.AuthorId = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *DtoGuildInvite) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGuildInvite) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *DtoGuildInvite) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *DtoGuildInvite) SetCode(v string) {
	o.Code = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DtoGuildInvite) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGuildInvite) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DtoGuildInvite) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *DtoGuildInvite) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *DtoGuildInvite) GetExpiresAt() string {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret string
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGuildInvite) GetExpiresAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *DtoGuildInvite) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given string and assigns it to the ExpiresAt field.
func (o *DtoGuildInvite) SetExpiresAt(v string) {
	o.ExpiresAt = &v
}

// GetGuildId returns the GuildId field value if set, zero value otherwise.
func (o *DtoGuildInvite) GetGuildId() int32 {
	if o == nil || IsNil(o.GuildId) {
		var ret int32
		return ret
	}
	return *o.GuildId
}

// GetGuildIdOk returns a tuple with the GuildId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGuildInvite) GetGuildIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GuildId) {
		return nil, false
	}
	return o.GuildId, true
}

// HasGuildId returns a boolean if a field has been set.
func (o *DtoGuildInvite) HasGuildId() bool {
	if o != nil && !IsNil(o.GuildId) {
		return true
	}

	return false
}

// SetGuildId gets a reference to the given int32 and assigns it to the GuildId field.
func (o *DtoGuildInvite) SetGuildId(v int32) {
	o.GuildId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DtoGuildInvite) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoGuildInvite) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DtoGuildInvite) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *DtoGuildInvite) SetId(v int32) {
	o.Id = &v
}

func (o DtoGuildInvite) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoGuildInvite) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorId) {
		toSerialize["author_id"] = o.AuthorId
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if !IsNil(o.GuildId) {
		toSerialize["guild_id"] = o.GuildId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableDtoGuildInvite struct {
	value *DtoGuildInvite
	isSet bool
}

func (v NullableDtoGuildInvite) Get() *DtoGuildInvite {
	return v.value
}

func (v *NullableDtoGuildInvite) Set(val *DtoGuildInvite) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoGuildInvite) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoGuildInvite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoGuildInvite(val *DtoGuildInvite) *NullableDtoGuildInvite {
	return &NullableDtoGuildInvite{value: val, isSet: true}
}

func (v NullableDtoGuildInvite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoGuildInvite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
