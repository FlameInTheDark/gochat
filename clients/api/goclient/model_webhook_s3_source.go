/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the WebhookS3Source type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookS3Source{}

// WebhookS3Source struct for WebhookS3Source
type WebhookS3Source struct {
	Host      *string `json:"host,omitempty"`
	Port      *string `json:"port,omitempty"`
	UserAgent *string `json:"userAgent,omitempty"`
}

// NewWebhookS3Source instantiates a new WebhookS3Source object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookS3Source() *WebhookS3Source {
	this := WebhookS3Source{}
	return &this
}

// NewWebhookS3SourceWithDefaults instantiates a new WebhookS3Source object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookS3SourceWithDefaults() *WebhookS3Source {
	this := WebhookS3Source{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *WebhookS3Source) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookS3Source) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *WebhookS3Source) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *WebhookS3Source) SetHost(v string) {
	o.Host = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *WebhookS3Source) GetPort() string {
	if o == nil || IsNil(o.Port) {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookS3Source) GetPortOk() (*string, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *WebhookS3Source) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *WebhookS3Source) SetPort(v string) {
	o.Port = &v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *WebhookS3Source) GetUserAgent() string {
	if o == nil || IsNil(o.UserAgent) {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookS3Source) GetUserAgentOk() (*string, bool) {
	if o == nil || IsNil(o.UserAgent) {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *WebhookS3Source) HasUserAgent() bool {
	if o != nil && !IsNil(o.UserAgent) {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *WebhookS3Source) SetUserAgent(v string) {
	o.UserAgent = &v
}

func (o WebhookS3Source) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookS3Source) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.UserAgent) {
		toSerialize["userAgent"] = o.UserAgent
	}
	return toSerialize, nil
}

type NullableWebhookS3Source struct {
	value *WebhookS3Source
	isSet bool
}

func (v NullableWebhookS3Source) Get() *WebhookS3Source {
	return v.value
}

func (v *NullableWebhookS3Source) Set(val *WebhookS3Source) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookS3Source) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookS3Source) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookS3Source(val *WebhookS3Source) *NullableWebhookS3Source {
	return &NullableWebhookS3Source{value: val, isSet: true}
}

func (v NullableWebhookS3Source) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookS3Source) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
