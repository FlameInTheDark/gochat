/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the ModelUserSettingsGuilds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelUserSettingsGuilds{}

// ModelUserSettingsGuilds struct for ModelUserSettingsGuilds
type ModelUserSettingsGuilds struct {
	GuildId         *int32                          `json:"guild_id,omitempty"`
	Notifications   *ModelUserSettingsNotifications `json:"notifications,omitempty"`
	Position        *int32                          `json:"position,omitempty"`
	SelectedChannel *int32                          `json:"selected_channel,omitempty"`
}

// NewModelUserSettingsGuilds instantiates a new ModelUserSettingsGuilds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelUserSettingsGuilds() *ModelUserSettingsGuilds {
	this := ModelUserSettingsGuilds{}
	return &this
}

// NewModelUserSettingsGuildsWithDefaults instantiates a new ModelUserSettingsGuilds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelUserSettingsGuildsWithDefaults() *ModelUserSettingsGuilds {
	this := ModelUserSettingsGuilds{}
	return &this
}

// GetGuildId returns the GuildId field value if set, zero value otherwise.
func (o *ModelUserSettingsGuilds) GetGuildId() int32 {
	if o == nil || IsNil(o.GuildId) {
		var ret int32
		return ret
	}
	return *o.GuildId
}

// GetGuildIdOk returns a tuple with the GuildId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelUserSettingsGuilds) GetGuildIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GuildId) {
		return nil, false
	}
	return o.GuildId, true
}

// HasGuildId returns a boolean if a field has been set.
func (o *ModelUserSettingsGuilds) HasGuildId() bool {
	if o != nil && !IsNil(o.GuildId) {
		return true
	}

	return false
}

// SetGuildId gets a reference to the given int32 and assigns it to the GuildId field.
func (o *ModelUserSettingsGuilds) SetGuildId(v int32) {
	o.GuildId = &v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *ModelUserSettingsGuilds) GetNotifications() ModelUserSettingsNotifications {
	if o == nil || IsNil(o.Notifications) {
		var ret ModelUserSettingsNotifications
		return ret
	}
	return *o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelUserSettingsGuilds) GetNotificationsOk() (*ModelUserSettingsNotifications, bool) {
	if o == nil || IsNil(o.Notifications) {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *ModelUserSettingsGuilds) HasNotifications() bool {
	if o != nil && !IsNil(o.Notifications) {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given ModelUserSettingsNotifications and assigns it to the Notifications field.
func (o *ModelUserSettingsGuilds) SetNotifications(v ModelUserSettingsNotifications) {
	o.Notifications = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *ModelUserSettingsGuilds) GetPosition() int32 {
	if o == nil || IsNil(o.Position) {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelUserSettingsGuilds) GetPositionOk() (*int32, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *ModelUserSettingsGuilds) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *ModelUserSettingsGuilds) SetPosition(v int32) {
	o.Position = &v
}

// GetSelectedChannel returns the SelectedChannel field value if set, zero value otherwise.
func (o *ModelUserSettingsGuilds) GetSelectedChannel() int32 {
	if o == nil || IsNil(o.SelectedChannel) {
		var ret int32
		return ret
	}
	return *o.SelectedChannel
}

// GetSelectedChannelOk returns a tuple with the SelectedChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelUserSettingsGuilds) GetSelectedChannelOk() (*int32, bool) {
	if o == nil || IsNil(o.SelectedChannel) {
		return nil, false
	}
	return o.SelectedChannel, true
}

// HasSelectedChannel returns a boolean if a field has been set.
func (o *ModelUserSettingsGuilds) HasSelectedChannel() bool {
	if o != nil && !IsNil(o.SelectedChannel) {
		return true
	}

	return false
}

// SetSelectedChannel gets a reference to the given int32 and assigns it to the SelectedChannel field.
func (o *ModelUserSettingsGuilds) SetSelectedChannel(v int32) {
	o.SelectedChannel = &v
}

func (o ModelUserSettingsGuilds) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelUserSettingsGuilds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GuildId) {
		toSerialize["guild_id"] = o.GuildId
	}
	if !IsNil(o.Notifications) {
		toSerialize["notifications"] = o.Notifications
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.SelectedChannel) {
		toSerialize["selected_channel"] = o.SelectedChannel
	}
	return toSerialize, nil
}

type NullableModelUserSettingsGuilds struct {
	value *ModelUserSettingsGuilds
	isSet bool
}

func (v NullableModelUserSettingsGuilds) Get() *ModelUserSettingsGuilds {
	return v.value
}

func (v *NullableModelUserSettingsGuilds) Set(val *ModelUserSettingsGuilds) {
	v.value = val
	v.isSet = true
}

func (v NullableModelUserSettingsGuilds) IsSet() bool {
	return v.isSet
}

func (v *NullableModelUserSettingsGuilds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelUserSettingsGuilds(val *ModelUserSettingsGuilds) *NullableModelUserSettingsGuilds {
	return &NullableModelUserSettingsGuilds{value: val, isSet: true}
}

func (v NullableModelUserSettingsGuilds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelUserSettingsGuilds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
