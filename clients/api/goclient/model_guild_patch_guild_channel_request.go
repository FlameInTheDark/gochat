/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the GuildPatchGuildChannelRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GuildPatchGuildChannelRequest{}

// GuildPatchGuildChannelRequest struct for GuildPatchGuildChannelRequest
type GuildPatchGuildChannelRequest struct {
	Name     *string `json:"name,omitempty"`
	ParentId *int32  `json:"parent_id,omitempty"`
	Private  *bool   `json:"private,omitempty"`
	Topic    *string `json:"topic,omitempty"`
}

// NewGuildPatchGuildChannelRequest instantiates a new GuildPatchGuildChannelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuildPatchGuildChannelRequest() *GuildPatchGuildChannelRequest {
	this := GuildPatchGuildChannelRequest{}
	return &this
}

// NewGuildPatchGuildChannelRequestWithDefaults instantiates a new GuildPatchGuildChannelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuildPatchGuildChannelRequestWithDefaults() *GuildPatchGuildChannelRequest {
	this := GuildPatchGuildChannelRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GuildPatchGuildChannelRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuildPatchGuildChannelRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GuildPatchGuildChannelRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GuildPatchGuildChannelRequest) SetName(v string) {
	o.Name = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *GuildPatchGuildChannelRequest) GetParentId() int32 {
	if o == nil || IsNil(o.ParentId) {
		var ret int32
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuildPatchGuildChannelRequest) GetParentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *GuildPatchGuildChannelRequest) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given int32 and assigns it to the ParentId field.
func (o *GuildPatchGuildChannelRequest) SetParentId(v int32) {
	o.ParentId = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *GuildPatchGuildChannelRequest) GetPrivate() bool {
	if o == nil || IsNil(o.Private) {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuildPatchGuildChannelRequest) GetPrivateOk() (*bool, bool) {
	if o == nil || IsNil(o.Private) {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *GuildPatchGuildChannelRequest) HasPrivate() bool {
	if o != nil && !IsNil(o.Private) {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
func (o *GuildPatchGuildChannelRequest) SetPrivate(v bool) {
	o.Private = &v
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *GuildPatchGuildChannelRequest) GetTopic() string {
	if o == nil || IsNil(o.Topic) {
		var ret string
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuildPatchGuildChannelRequest) GetTopicOk() (*string, bool) {
	if o == nil || IsNil(o.Topic) {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *GuildPatchGuildChannelRequest) HasTopic() bool {
	if o != nil && !IsNil(o.Topic) {
		return true
	}

	return false
}

// SetTopic gets a reference to the given string and assigns it to the Topic field.
func (o *GuildPatchGuildChannelRequest) SetTopic(v string) {
	o.Topic = &v
}

func (o GuildPatchGuildChannelRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GuildPatchGuildChannelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ParentId) {
		toSerialize["parent_id"] = o.ParentId
	}
	if !IsNil(o.Private) {
		toSerialize["private"] = o.Private
	}
	if !IsNil(o.Topic) {
		toSerialize["topic"] = o.Topic
	}
	return toSerialize, nil
}

type NullableGuildPatchGuildChannelRequest struct {
	value *GuildPatchGuildChannelRequest
	isSet bool
}

func (v NullableGuildPatchGuildChannelRequest) Get() *GuildPatchGuildChannelRequest {
	return v.value
}

func (v *NullableGuildPatchGuildChannelRequest) Set(val *GuildPatchGuildChannelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGuildPatchGuildChannelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGuildPatchGuildChannelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuildPatchGuildChannelRequest(val *GuildPatchGuildChannelRequest) *NullableGuildPatchGuildChannelRequest {
	return &NullableGuildPatchGuildChannelRequest{value: val, isSet: true}
}

func (v NullableGuildPatchGuildChannelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuildPatchGuildChannelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
