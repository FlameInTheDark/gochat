/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the AuthRefreshTokenRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthRefreshTokenRequest{}

// AuthRefreshTokenRequest struct for AuthRefreshTokenRequest
type AuthRefreshTokenRequest struct {
	UserId *int32 `json:"user_id,omitempty"`
}

// NewAuthRefreshTokenRequest instantiates a new AuthRefreshTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthRefreshTokenRequest() *AuthRefreshTokenRequest {
	this := AuthRefreshTokenRequest{}
	return &this
}

// NewAuthRefreshTokenRequestWithDefaults instantiates a new AuthRefreshTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthRefreshTokenRequestWithDefaults() *AuthRefreshTokenRequest {
	this := AuthRefreshTokenRequest{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *AuthRefreshTokenRequest) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthRefreshTokenRequest) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *AuthRefreshTokenRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *AuthRefreshTokenRequest) SetUserId(v int32) {
	o.UserId = &v
}

func (o AuthRefreshTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthRefreshTokenRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableAuthRefreshTokenRequest struct {
	value *AuthRefreshTokenRequest
	isSet bool
}

func (v NullableAuthRefreshTokenRequest) Get() *AuthRefreshTokenRequest {
	return v.value
}

func (v *NullableAuthRefreshTokenRequest) Set(val *AuthRefreshTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthRefreshTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthRefreshTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthRefreshTokenRequest(val *AuthRefreshTokenRequest) *NullableAuthRefreshTokenRequest {
	return &NullableAuthRefreshTokenRequest{value: val, isSet: true}
}

func (v NullableAuthRefreshTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthRefreshTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
