/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the UserCreateDMManyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserCreateDMManyRequest{}

// UserCreateDMManyRequest struct for UserCreateDMManyRequest
type UserCreateDMManyRequest struct {
	ChannelId    *int32  `json:"channel_id,omitempty"`
	RecipientsId []int32 `json:"recipients_id,omitempty"`
}

// NewUserCreateDMManyRequest instantiates a new UserCreateDMManyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCreateDMManyRequest() *UserCreateDMManyRequest {
	this := UserCreateDMManyRequest{}
	return &this
}

// NewUserCreateDMManyRequestWithDefaults instantiates a new UserCreateDMManyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCreateDMManyRequestWithDefaults() *UserCreateDMManyRequest {
	this := UserCreateDMManyRequest{}
	return &this
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *UserCreateDMManyRequest) GetChannelId() int32 {
	if o == nil || IsNil(o.ChannelId) {
		var ret int32
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreateDMManyRequest) GetChannelIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *UserCreateDMManyRequest) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given int32 and assigns it to the ChannelId field.
func (o *UserCreateDMManyRequest) SetChannelId(v int32) {
	o.ChannelId = &v
}

// GetRecipientsId returns the RecipientsId field value if set, zero value otherwise.
func (o *UserCreateDMManyRequest) GetRecipientsId() []int32 {
	if o == nil || IsNil(o.RecipientsId) {
		var ret []int32
		return ret
	}
	return o.RecipientsId
}

// GetRecipientsIdOk returns a tuple with the RecipientsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreateDMManyRequest) GetRecipientsIdOk() ([]int32, bool) {
	if o == nil || IsNil(o.RecipientsId) {
		return nil, false
	}
	return o.RecipientsId, true
}

// HasRecipientsId returns a boolean if a field has been set.
func (o *UserCreateDMManyRequest) HasRecipientsId() bool {
	if o != nil && !IsNil(o.RecipientsId) {
		return true
	}

	return false
}

// SetRecipientsId gets a reference to the given []int32 and assigns it to the RecipientsId field.
func (o *UserCreateDMManyRequest) SetRecipientsId(v []int32) {
	o.RecipientsId = v
}

func (o UserCreateDMManyRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserCreateDMManyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChannelId) {
		toSerialize["channel_id"] = o.ChannelId
	}
	if !IsNil(o.RecipientsId) {
		toSerialize["recipients_id"] = o.RecipientsId
	}
	return toSerialize, nil
}

type NullableUserCreateDMManyRequest struct {
	value *UserCreateDMManyRequest
	isSet bool
}

func (v NullableUserCreateDMManyRequest) Get() *UserCreateDMManyRequest {
	return v.value
}

func (v *NullableUserCreateDMManyRequest) Set(val *UserCreateDMManyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCreateDMManyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCreateDMManyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCreateDMManyRequest(val *UserCreateDMManyRequest) *NullableUserCreateDMManyRequest {
	return &NullableUserCreateDMManyRequest{value: val, isSet: true}
}

func (v NullableUserCreateDMManyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCreateDMManyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
