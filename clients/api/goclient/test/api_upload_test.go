/*
GoChat API

Testing UploadAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package goclient

import (
	"context"
	openapiclient "github.com/FlameInTheDark/gochat/clients/api/goclient"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_goclient_UploadAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test UploadAPIService UploadAttachmentsChannelIdAttachmentIdPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var channelId int32
		var attachmentId int32

		resp, httpRes, err := apiClient.UploadAPI.UploadAttachmentsChannelIdAttachmentIdPost(context.Background(), channelId, attachmentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test UploadAPIService UploadAvatarsUserIdAvatarIdPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var userId int32
		var avatarId int32

		resp, httpRes, err := apiClient.UploadAPI.UploadAvatarsUserIdAvatarIdPost(context.Background(), userId, avatarId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
