/*
GoChat API

Testing MessageAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package goclient

import (
	"context"
	openapiclient "github.com/FlameInTheDark/gochat/clients/api/goclient"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_goclient_MessageAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test MessageAPIService MessageChannelChannelIdAttachmentPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var channelId int32

		resp, httpRes, err := apiClient.MessageAPI.MessageChannelChannelIdAttachmentPost(context.Background(), channelId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MessageAPIService MessageChannelChannelIdGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var channelId int32

		resp, httpRes, err := apiClient.MessageAPI.MessageChannelChannelIdGet(context.Background(), channelId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MessageAPIService MessageChannelChannelIdMessageIdDelete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var messageId int32
		var channelId int32

		resp, httpRes, err := apiClient.MessageAPI.MessageChannelChannelIdMessageIdDelete(context.Background(), messageId, channelId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MessageAPIService MessageChannelChannelIdMessageIdPatch", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var messageId int32
		var channelId int32

		resp, httpRes, err := apiClient.MessageAPI.MessageChannelChannelIdMessageIdPatch(context.Background(), messageId, channelId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MessageAPIService MessageChannelChannelIdPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var channelId int32

		resp, httpRes, err := apiClient.MessageAPI.MessageChannelChannelIdPost(context.Background(), channelId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
