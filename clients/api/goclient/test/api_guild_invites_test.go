/*
GoChat API

Testing GuildInvitesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package goclient

import (
	"context"
	openapiclient "github.com/FlameInTheDark/gochat/clients/api/goclient"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_goclient_GuildInvitesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test GuildInvitesAPIService GuildInvitesAcceptInviteCodePost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var inviteCode string

		resp, httpRes, err := apiClient.GuildInvitesAPI.GuildInvitesAcceptInviteCodePost(context.Background(), inviteCode).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test GuildInvitesAPIService GuildInvitesGuildIdGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var guildId int32

		resp, httpRes, err := apiClient.GuildInvitesAPI.GuildInvitesGuildIdGet(context.Background(), guildId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test GuildInvitesAPIService GuildInvitesGuildIdInviteIdDelete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var guildId int32
		var inviteId int32

		resp, httpRes, err := apiClient.GuildInvitesAPI.GuildInvitesGuildIdInviteIdDelete(context.Background(), guildId, inviteId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test GuildInvitesAPIService GuildInvitesGuildIdPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var guildId int32

		resp, httpRes, err := apiClient.GuildInvitesAPI.GuildInvitesGuildIdPost(context.Background(), guildId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test GuildInvitesAPIService GuildInvitesReceiveInviteCodeGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var inviteCode string

		resp, httpRes, err := apiClient.GuildInvitesAPI.GuildInvitesReceiveInviteCodeGet(context.Background(), inviteCode).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
