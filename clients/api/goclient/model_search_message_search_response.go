/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the SearchMessageSearchResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchMessageSearchResponse{}

// SearchMessageSearchResponse struct for SearchMessageSearchResponse
type SearchMessageSearchResponse struct {
	Messages []DtoMessage `json:"messages,omitempty"`
	Pages    *int32       `json:"pages,omitempty"`
}

// NewSearchMessageSearchResponse instantiates a new SearchMessageSearchResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchMessageSearchResponse() *SearchMessageSearchResponse {
	this := SearchMessageSearchResponse{}
	return &this
}

// NewSearchMessageSearchResponseWithDefaults instantiates a new SearchMessageSearchResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchMessageSearchResponseWithDefaults() *SearchMessageSearchResponse {
	this := SearchMessageSearchResponse{}
	return &this
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *SearchMessageSearchResponse) GetMessages() []DtoMessage {
	if o == nil || IsNil(o.Messages) {
		var ret []DtoMessage
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchMessageSearchResponse) GetMessagesOk() ([]DtoMessage, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *SearchMessageSearchResponse) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []DtoMessage and assigns it to the Messages field.
func (o *SearchMessageSearchResponse) SetMessages(v []DtoMessage) {
	o.Messages = v
}

// GetPages returns the Pages field value if set, zero value otherwise.
func (o *SearchMessageSearchResponse) GetPages() int32 {
	if o == nil || IsNil(o.Pages) {
		var ret int32
		return ret
	}
	return *o.Pages
}

// GetPagesOk returns a tuple with the Pages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchMessageSearchResponse) GetPagesOk() (*int32, bool) {
	if o == nil || IsNil(o.Pages) {
		return nil, false
	}
	return o.Pages, true
}

// HasPages returns a boolean if a field has been set.
func (o *SearchMessageSearchResponse) HasPages() bool {
	if o != nil && !IsNil(o.Pages) {
		return true
	}

	return false
}

// SetPages gets a reference to the given int32 and assigns it to the Pages field.
func (o *SearchMessageSearchResponse) SetPages(v int32) {
	o.Pages = &v
}

func (o SearchMessageSearchResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchMessageSearchResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}
	if !IsNil(o.Pages) {
		toSerialize["pages"] = o.Pages
	}
	return toSerialize, nil
}

type NullableSearchMessageSearchResponse struct {
	value *SearchMessageSearchResponse
	isSet bool
}

func (v NullableSearchMessageSearchResponse) Get() *SearchMessageSearchResponse {
	return v.value
}

func (v *NullableSearchMessageSearchResponse) Set(val *SearchMessageSearchResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchMessageSearchResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchMessageSearchResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchMessageSearchResponse(val *SearchMessageSearchResponse) *NullableSearchMessageSearchResponse {
	return &NullableSearchMessageSearchResponse{value: val, isSet: true}
}

func (v NullableSearchMessageSearchResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchMessageSearchResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
