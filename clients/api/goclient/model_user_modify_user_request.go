/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the UserModifyUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserModifyUserRequest{}

// UserModifyUserRequest struct for UserModifyUserRequest
type UserModifyUserRequest struct {
	// Avatar ID.
	Avatar *int32 `json:"avatar,omitempty"`
	// User name.
	Name *string `json:"name,omitempty"`
}

// NewUserModifyUserRequest instantiates a new UserModifyUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserModifyUserRequest() *UserModifyUserRequest {
	this := UserModifyUserRequest{}
	return &this
}

// NewUserModifyUserRequestWithDefaults instantiates a new UserModifyUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserModifyUserRequestWithDefaults() *UserModifyUserRequest {
	this := UserModifyUserRequest{}
	return &this
}

// GetAvatar returns the Avatar field value if set, zero value otherwise.
func (o *UserModifyUserRequest) GetAvatar() int32 {
	if o == nil || IsNil(o.Avatar) {
		var ret int32
		return ret
	}
	return *o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModifyUserRequest) GetAvatarOk() (*int32, bool) {
	if o == nil || IsNil(o.Avatar) {
		return nil, false
	}
	return o.Avatar, true
}

// HasAvatar returns a boolean if a field has been set.
func (o *UserModifyUserRequest) HasAvatar() bool {
	if o != nil && !IsNil(o.Avatar) {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given int32 and assigns it to the Avatar field.
func (o *UserModifyUserRequest) SetAvatar(v int32) {
	o.Avatar = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UserModifyUserRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModifyUserRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UserModifyUserRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UserModifyUserRequest) SetName(v string) {
	o.Name = &v
}

func (o UserModifyUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserModifyUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Avatar) {
		toSerialize["avatar"] = o.Avatar
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableUserModifyUserRequest struct {
	value *UserModifyUserRequest
	isSet bool
}

func (v NullableUserModifyUserRequest) Get() *UserModifyUserRequest {
	return v.value
}

func (v *NullableUserModifyUserRequest) Set(val *UserModifyUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserModifyUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserModifyUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserModifyUserRequest(val *UserModifyUserRequest) *NullableUserModifyUserRequest {
	return &NullableUserModifyUserRequest{value: val, isSet: true}
}

func (v NullableUserModifyUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserModifyUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
