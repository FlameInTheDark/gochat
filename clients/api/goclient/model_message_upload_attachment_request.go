/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the MessageUploadAttachmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageUploadAttachmentRequest{}

// MessageUploadAttachmentRequest struct for MessageUploadAttachmentRequest
type MessageUploadAttachmentRequest struct {
	// File size in bytes
	FileSize *int32 `json:"file_size,omitempty"`
	// File name
	Filename *string `json:"filename,omitempty"`
	// Image height in pixels
	Height *int32 `json:"height,omitempty"`
	// Image width in pixels
	Width *int32 `json:"width,omitempty"`
}

// NewMessageUploadAttachmentRequest instantiates a new MessageUploadAttachmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageUploadAttachmentRequest() *MessageUploadAttachmentRequest {
	this := MessageUploadAttachmentRequest{}
	return &this
}

// NewMessageUploadAttachmentRequestWithDefaults instantiates a new MessageUploadAttachmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageUploadAttachmentRequestWithDefaults() *MessageUploadAttachmentRequest {
	this := MessageUploadAttachmentRequest{}
	return &this
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *MessageUploadAttachmentRequest) GetFileSize() int32 {
	if o == nil || IsNil(o.FileSize) {
		var ret int32
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageUploadAttachmentRequest) GetFileSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *MessageUploadAttachmentRequest) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given int32 and assigns it to the FileSize field.
func (o *MessageUploadAttachmentRequest) SetFileSize(v int32) {
	o.FileSize = &v
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *MessageUploadAttachmentRequest) GetFilename() string {
	if o == nil || IsNil(o.Filename) {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageUploadAttachmentRequest) GetFilenameOk() (*string, bool) {
	if o == nil || IsNil(o.Filename) {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *MessageUploadAttachmentRequest) HasFilename() bool {
	if o != nil && !IsNil(o.Filename) {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *MessageUploadAttachmentRequest) SetFilename(v string) {
	o.Filename = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *MessageUploadAttachmentRequest) GetHeight() int32 {
	if o == nil || IsNil(o.Height) {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageUploadAttachmentRequest) GetHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *MessageUploadAttachmentRequest) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *MessageUploadAttachmentRequest) SetHeight(v int32) {
	o.Height = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *MessageUploadAttachmentRequest) GetWidth() int32 {
	if o == nil || IsNil(o.Width) {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageUploadAttachmentRequest) GetWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *MessageUploadAttachmentRequest) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *MessageUploadAttachmentRequest) SetWidth(v int32) {
	o.Width = &v
}

func (o MessageUploadAttachmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageUploadAttachmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FileSize) {
		toSerialize["file_size"] = o.FileSize
	}
	if !IsNil(o.Filename) {
		toSerialize["filename"] = o.Filename
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	return toSerialize, nil
}

type NullableMessageUploadAttachmentRequest struct {
	value *MessageUploadAttachmentRequest
	isSet bool
}

func (v NullableMessageUploadAttachmentRequest) Get() *MessageUploadAttachmentRequest {
	return v.value
}

func (v *NullableMessageUploadAttachmentRequest) Set(val *MessageUploadAttachmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageUploadAttachmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageUploadAttachmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageUploadAttachmentRequest(val *MessageUploadAttachmentRequest) *NullableMessageUploadAttachmentRequest {
	return &NullableMessageUploadAttachmentRequest{value: val, isSet: true}
}

func (v NullableMessageUploadAttachmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageUploadAttachmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
