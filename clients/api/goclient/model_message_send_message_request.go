/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the MessageSendMessageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageSendMessageRequest{}

// MessageSendMessageRequest struct for MessageSendMessageRequest
type MessageSendMessageRequest struct {
	Attachments []int32 `json:"attachments,omitempty"`
	Content     *string `json:"content,omitempty"`
	Mentions    []int32 `json:"mentions,omitempty"`
}

// NewMessageSendMessageRequest instantiates a new MessageSendMessageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageSendMessageRequest() *MessageSendMessageRequest {
	this := MessageSendMessageRequest{}
	return &this
}

// NewMessageSendMessageRequestWithDefaults instantiates a new MessageSendMessageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageSendMessageRequestWithDefaults() *MessageSendMessageRequest {
	this := MessageSendMessageRequest{}
	return &this
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *MessageSendMessageRequest) GetAttachments() []int32 {
	if o == nil || IsNil(o.Attachments) {
		var ret []int32
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageSendMessageRequest) GetAttachmentsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *MessageSendMessageRequest) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []int32 and assigns it to the Attachments field.
func (o *MessageSendMessageRequest) SetAttachments(v []int32) {
	o.Attachments = v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *MessageSendMessageRequest) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageSendMessageRequest) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *MessageSendMessageRequest) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *MessageSendMessageRequest) SetContent(v string) {
	o.Content = &v
}

// GetMentions returns the Mentions field value if set, zero value otherwise.
func (o *MessageSendMessageRequest) GetMentions() []int32 {
	if o == nil || IsNil(o.Mentions) {
		var ret []int32
		return ret
	}
	return o.Mentions
}

// GetMentionsOk returns a tuple with the Mentions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageSendMessageRequest) GetMentionsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Mentions) {
		return nil, false
	}
	return o.Mentions, true
}

// HasMentions returns a boolean if a field has been set.
func (o *MessageSendMessageRequest) HasMentions() bool {
	if o != nil && !IsNil(o.Mentions) {
		return true
	}

	return false
}

// SetMentions gets a reference to the given []int32 and assigns it to the Mentions field.
func (o *MessageSendMessageRequest) SetMentions(v []int32) {
	o.Mentions = v
}

func (o MessageSendMessageRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageSendMessageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Mentions) {
		toSerialize["mentions"] = o.Mentions
	}
	return toSerialize, nil
}

type NullableMessageSendMessageRequest struct {
	value *MessageSendMessageRequest
	isSet bool
}

func (v NullableMessageSendMessageRequest) Get() *MessageSendMessageRequest {
	return v.value
}

func (v *NullableMessageSendMessageRequest) Set(val *MessageSendMessageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageSendMessageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageSendMessageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageSendMessageRequest(val *MessageSendMessageRequest) *NullableMessageSendMessageRequest {
	return &NullableMessageSendMessageRequest{value: val, isSet: true}
}

func (v NullableMessageSendMessageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageSendMessageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
