/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the AuthRefreshTokenResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthRefreshTokenResponse{}

// AuthRefreshTokenResponse struct for AuthRefreshTokenResponse
type AuthRefreshTokenResponse struct {
	// Refresh token. Used to refresh authentication token.
	RefreshToken *string `json:"refresh_token,omitempty"`
	// Authentication token
	Token *string `json:"token,omitempty"`
}

// NewAuthRefreshTokenResponse instantiates a new AuthRefreshTokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthRefreshTokenResponse() *AuthRefreshTokenResponse {
	this := AuthRefreshTokenResponse{}
	return &this
}

// NewAuthRefreshTokenResponseWithDefaults instantiates a new AuthRefreshTokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthRefreshTokenResponseWithDefaults() *AuthRefreshTokenResponse {
	this := AuthRefreshTokenResponse{}
	return &this
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise.
func (o *AuthRefreshTokenResponse) GetRefreshToken() string {
	if o == nil || IsNil(o.RefreshToken) {
		var ret string
		return ret
	}
	return *o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthRefreshTokenResponse) GetRefreshTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshToken) {
		return nil, false
	}
	return o.RefreshToken, true
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *AuthRefreshTokenResponse) HasRefreshToken() bool {
	if o != nil && !IsNil(o.RefreshToken) {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given string and assigns it to the RefreshToken field.
func (o *AuthRefreshTokenResponse) SetRefreshToken(v string) {
	o.RefreshToken = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *AuthRefreshTokenResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthRefreshTokenResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *AuthRefreshTokenResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *AuthRefreshTokenResponse) SetToken(v string) {
	o.Token = &v
}

func (o AuthRefreshTokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthRefreshTokenResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RefreshToken) {
		toSerialize["refresh_token"] = o.RefreshToken
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableAuthRefreshTokenResponse struct {
	value *AuthRefreshTokenResponse
	isSet bool
}

func (v NullableAuthRefreshTokenResponse) Get() *AuthRefreshTokenResponse {
	return v.value
}

func (v *NullableAuthRefreshTokenResponse) Set(val *AuthRefreshTokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthRefreshTokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthRefreshTokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthRefreshTokenResponse(val *AuthRefreshTokenResponse) *NullableAuthRefreshTokenResponse {
	return &NullableAuthRefreshTokenResponse{value: val, isSet: true}
}

func (v NullableAuthRefreshTokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthRefreshTokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
