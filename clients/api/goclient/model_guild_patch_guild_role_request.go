/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the GuildPatchGuildRoleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GuildPatchGuildRoleRequest{}

// GuildPatchGuildRoleRequest struct for GuildPatchGuildRoleRequest
type GuildPatchGuildRoleRequest struct {
	// RGB int value
	Color *int32 `json:"color,omitempty"`
	// Role name
	Name *string `json:"name,omitempty"`
	// Permissions bitset
	Permissions *int32 `json:"permissions,omitempty"`
}

// NewGuildPatchGuildRoleRequest instantiates a new GuildPatchGuildRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuildPatchGuildRoleRequest() *GuildPatchGuildRoleRequest {
	this := GuildPatchGuildRoleRequest{}
	return &this
}

// NewGuildPatchGuildRoleRequestWithDefaults instantiates a new GuildPatchGuildRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuildPatchGuildRoleRequestWithDefaults() *GuildPatchGuildRoleRequest {
	this := GuildPatchGuildRoleRequest{}
	return &this
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *GuildPatchGuildRoleRequest) GetColor() int32 {
	if o == nil || IsNil(o.Color) {
		var ret int32
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuildPatchGuildRoleRequest) GetColorOk() (*int32, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *GuildPatchGuildRoleRequest) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given int32 and assigns it to the Color field.
func (o *GuildPatchGuildRoleRequest) SetColor(v int32) {
	o.Color = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GuildPatchGuildRoleRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuildPatchGuildRoleRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GuildPatchGuildRoleRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GuildPatchGuildRoleRequest) SetName(v string) {
	o.Name = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *GuildPatchGuildRoleRequest) GetPermissions() int32 {
	if o == nil || IsNil(o.Permissions) {
		var ret int32
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuildPatchGuildRoleRequest) GetPermissionsOk() (*int32, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *GuildPatchGuildRoleRequest) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given int32 and assigns it to the Permissions field.
func (o *GuildPatchGuildRoleRequest) SetPermissions(v int32) {
	o.Permissions = &v
}

func (o GuildPatchGuildRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GuildPatchGuildRoleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableGuildPatchGuildRoleRequest struct {
	value *GuildPatchGuildRoleRequest
	isSet bool
}

func (v NullableGuildPatchGuildRoleRequest) Get() *GuildPatchGuildRoleRequest {
	return v.value
}

func (v *NullableGuildPatchGuildRoleRequest) Set(val *GuildPatchGuildRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGuildPatchGuildRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGuildPatchGuildRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuildPatchGuildRoleRequest(val *GuildPatchGuildRoleRequest) *NullableGuildPatchGuildRoleRequest {
	return &NullableGuildPatchGuildRoleRequest{value: val, isSet: true}
}

func (v NullableGuildPatchGuildRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuildPatchGuildRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
