/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the WebhookS3RequestParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookS3RequestParameters{}

// WebhookS3RequestParameters struct for WebhookS3RequestParameters
type WebhookS3RequestParameters struct {
	PrincipalId     *string `json:"principalId,omitempty"`
	Region          *string `json:"region,omitempty"`
	SourceIPAddress *string `json:"sourceIPAddress,omitempty"`
}

// NewWebhookS3RequestParameters instantiates a new WebhookS3RequestParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookS3RequestParameters() *WebhookS3RequestParameters {
	this := WebhookS3RequestParameters{}
	return &this
}

// NewWebhookS3RequestParametersWithDefaults instantiates a new WebhookS3RequestParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookS3RequestParametersWithDefaults() *WebhookS3RequestParameters {
	this := WebhookS3RequestParameters{}
	return &this
}

// GetPrincipalId returns the PrincipalId field value if set, zero value otherwise.
func (o *WebhookS3RequestParameters) GetPrincipalId() string {
	if o == nil || IsNil(o.PrincipalId) {
		var ret string
		return ret
	}
	return *o.PrincipalId
}

// GetPrincipalIdOk returns a tuple with the PrincipalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookS3RequestParameters) GetPrincipalIdOk() (*string, bool) {
	if o == nil || IsNil(o.PrincipalId) {
		return nil, false
	}
	return o.PrincipalId, true
}

// HasPrincipalId returns a boolean if a field has been set.
func (o *WebhookS3RequestParameters) HasPrincipalId() bool {
	if o != nil && !IsNil(o.PrincipalId) {
		return true
	}

	return false
}

// SetPrincipalId gets a reference to the given string and assigns it to the PrincipalId field.
func (o *WebhookS3RequestParameters) SetPrincipalId(v string) {
	o.PrincipalId = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *WebhookS3RequestParameters) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookS3RequestParameters) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *WebhookS3RequestParameters) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *WebhookS3RequestParameters) SetRegion(v string) {
	o.Region = &v
}

// GetSourceIPAddress returns the SourceIPAddress field value if set, zero value otherwise.
func (o *WebhookS3RequestParameters) GetSourceIPAddress() string {
	if o == nil || IsNil(o.SourceIPAddress) {
		var ret string
		return ret
	}
	return *o.SourceIPAddress
}

// GetSourceIPAddressOk returns a tuple with the SourceIPAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookS3RequestParameters) GetSourceIPAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SourceIPAddress) {
		return nil, false
	}
	return o.SourceIPAddress, true
}

// HasSourceIPAddress returns a boolean if a field has been set.
func (o *WebhookS3RequestParameters) HasSourceIPAddress() bool {
	if o != nil && !IsNil(o.SourceIPAddress) {
		return true
	}

	return false
}

// SetSourceIPAddress gets a reference to the given string and assigns it to the SourceIPAddress field.
func (o *WebhookS3RequestParameters) SetSourceIPAddress(v string) {
	o.SourceIPAddress = &v
}

func (o WebhookS3RequestParameters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookS3RequestParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PrincipalId) {
		toSerialize["principalId"] = o.PrincipalId
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.SourceIPAddress) {
		toSerialize["sourceIPAddress"] = o.SourceIPAddress
	}
	return toSerialize, nil
}

type NullableWebhookS3RequestParameters struct {
	value *WebhookS3RequestParameters
	isSet bool
}

func (v NullableWebhookS3RequestParameters) Get() *WebhookS3RequestParameters {
	return v.value
}

func (v *NullableWebhookS3RequestParameters) Set(val *WebhookS3RequestParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookS3RequestParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookS3RequestParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookS3RequestParameters(val *WebhookS3RequestParameters) *NullableWebhookS3RequestParameters {
	return &NullableWebhookS3RequestParameters{value: val, isSet: true}
}

func (v NullableWebhookS3RequestParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookS3RequestParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
