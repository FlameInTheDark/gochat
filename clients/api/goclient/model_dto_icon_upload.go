/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the DtoIconUpload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoIconUpload{}

// DtoIconUpload struct for DtoIconUpload
type DtoIconUpload struct {
	GuildId *int32 `json:"guild_id,omitempty"`
	Id      *int32 `json:"id,omitempty"`
}

// NewDtoIconUpload instantiates a new DtoIconUpload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoIconUpload() *DtoIconUpload {
	this := DtoIconUpload{}
	return &this
}

// NewDtoIconUploadWithDefaults instantiates a new DtoIconUpload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoIconUploadWithDefaults() *DtoIconUpload {
	this := DtoIconUpload{}
	return &this
}

// GetGuildId returns the GuildId field value if set, zero value otherwise.
func (o *DtoIconUpload) GetGuildId() int32 {
	if o == nil || IsNil(o.GuildId) {
		var ret int32
		return ret
	}
	return *o.GuildId
}

// GetGuildIdOk returns a tuple with the GuildId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoIconUpload) GetGuildIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GuildId) {
		return nil, false
	}
	return o.GuildId, true
}

// HasGuildId returns a boolean if a field has been set.
func (o *DtoIconUpload) HasGuildId() bool {
	if o != nil && !IsNil(o.GuildId) {
		return true
	}

	return false
}

// SetGuildId gets a reference to the given int32 and assigns it to the GuildId field.
func (o *DtoIconUpload) SetGuildId(v int32) {
	o.GuildId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DtoIconUpload) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoIconUpload) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DtoIconUpload) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *DtoIconUpload) SetId(v int32) {
	o.Id = &v
}

func (o DtoIconUpload) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoIconUpload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GuildId) {
		toSerialize["guild_id"] = o.GuildId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableDtoIconUpload struct {
	value *DtoIconUpload
	isSet bool
}

func (v NullableDtoIconUpload) Get() *DtoIconUpload {
	return v.value
}

func (v *NullableDtoIconUpload) Set(val *DtoIconUpload) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoIconUpload) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoIconUpload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoIconUpload(val *DtoIconUpload) *NullableDtoIconUpload {
	return &NullableDtoIconUpload{value: val, isSet: true}
}

func (v NullableDtoIconUpload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoIconUpload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
