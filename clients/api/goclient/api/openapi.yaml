openapi: 3.1.0
info:
  contact:
    email: viktorfreedom@gmail.com
    name: Viktor Menshchikov
    url: https://github.com/FlameInTheDark
  description: This is an API for the GoChat
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: GoChat API
  version: "1.0"
externalDocs:
  description: ""
  url: ""
servers:
- url: localhost/api/v1
paths:
  /auth/confirmation:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth.ConfirmationRequest'
        description: Login data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: string
          description: "Registration completed, account created"
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                type: string
          description: Discriminator is not unique
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Confirmation
      tags:
      - Auth
  /auth/login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth.LoginRequest'
        description: Login data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth.LoginResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Authentication
      tags:
      - Auth
  /auth/recovery:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth.PasswordRecoveryRequest'
        description: Email for password recovery
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: string
          description: Recovery email sent
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Email not found
        "409":
          content:
            application/json:
              schema:
                type: string
          description: Recovery email already sent
        "410":
          content:
            application/json:
              schema:
                type: string
          description: User is banned
        "429":
          content:
            application/json:
              schema:
                type: string
          description: Try again later
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Password Recovery
      tags:
      - Auth
  /auth/refresh:
    get:
      parameters:
      - description: Refresh token instead of auth
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth.RefreshTokenResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Refresh authentication token
      tags:
      - Auth
  /auth/registration:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth.RegisterRequest'
        description: Login data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Registration email sent
        "302":
          content:
            application/json:
              schema:
                type: string
          description: User already exist
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "429":
          content:
            application/json:
              schema:
                type: string
          description: Try again later
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Registration
      tags:
      - Auth
  /auth/reset:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auth.PasswordResetRequest'
        description: Password reset data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Password reset successful
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Password Reset
      tags:
      - Auth
  /guild:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guild.CreateGuildRequest'
        description: Guild data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Guild'
          description: Guild
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Create guild
      tags:
      - Guild
  /guild/invites/accept/{invite_code}:
    post:
      parameters:
      - description: Invite code
        example: PWBJ124G
        explode: false
        in: path
        name: invite_code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Guild'
          description: Joined guild
        "401":
          content:
            application/json:
              schema:
                type: string
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                type: string
          description: invite not found
      summary: Accept invite and join guild
      tags:
      - Guild Invites
  /guild/invites/receive/{invite_code}:
    get:
      parameters:
      - description: Invite code
        example: PWBJ124G
        explode: false
        in: path
        name: invite_code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.InvitePreview'
          description: Invite preview
        "404":
          content:
            application/json:
              schema:
                type: string
          description: invite not found
      summary: Get invite info by code
      tags:
      - Guild Invites
  /guild/invites/{guild_id}:
    get:
      parameters:
      - description: Guild id
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.GuildInvite'
                type: array
          description: List of invites
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: List active invites for guild
      tags:
      - Guild Invites
    post:
      parameters:
      - description: Guild id
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guild.CreateInviteRequest'
        description: Invite options
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.GuildInvite'
          description: Invite
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: Create a new invite
      tags:
      - Guild Invites
  /guild/invites/{guild_id}/{invite_id}:
    delete:
      parameters:
      - description: Guild id
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Invite id
        example: 2230469276416868352
        explode: false
        in: path
        name: invite_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          content:
            application/json:
              schema:
                type: string
          description: Deleted
        "404":
          content:
            application/json:
              schema:
                type: string
          description: invite not found
      summary: Delete an invite by id
      tags:
      - Guild Invites
  /guild/{guild_id}:
    delete:
      description: "Deletes a guild. Only the guild owner can delete a guild. This\
        \ removes all members, all guild icons, and all guild channels."
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Deleted
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Delete guild
      tags:
      - Guild
    get:
      parameters:
      - description: Guild id
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Guild'
          description: Guild
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Get guild
      tags:
      - Guild
    patch:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guild.UpdateGuildRequest'
        description: Update guild data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Guild'
          description: Guild
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Update guild
      tags:
      - Guild
  /guild/{guild_id}/category:
    post:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guild.CreateGuildChannelCategoryRequest'
        description: Create category data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Created
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Create guild channel category
      tags:
      - Guild
  /guild/{guild_id}/category/{category_id}:
    delete:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Category ID (actually a channel with special type)
        example: 2230469276416868352
        explode: false
        in: path
        name: category_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Deleted
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Delete channel category
      tags:
      - Guild
  /guild/{guild_id}/channel:
    get:
      parameters:
      - description: Guild id
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Channel'
                type: array
          description: List of channels
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Get guild channels
      tags:
      - Guild
    post:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guild.CreateGuildChannelRequest'
        description: Create channel data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Created
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Create guild channel
      tags:
      - Guild
  /guild/{guild_id}/channel/order:
    patch:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guild.PatchGuildChannelOrderRequest'
        description: Update channel order data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Member not found
        "406":
          content:
            application/json:
              schema:
                type: string
          description: Permissions required
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Change channels order
      tags:
      - Guild
  /guild/{guild_id}/channel/{channel_id}:
    delete:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Channel ID
        example: 2230469276416868352
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Deleted
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Delete channel
      tags:
      - Guild
    get:
      parameters:
      - description: Guild id
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Channel id
        example: 2230469276416868352
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Channel'
          description: Channel
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Get guild channel
      tags:
      - Guild
    patch:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Channel ID
        example: 2230469276416868352
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guild.PatchGuildChannelRequest'
        description: Request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Channel'
          description: Ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Member not found
        "406":
          content:
            application/json:
              schema:
                type: string
          description: Permissions required
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Change channels data
      tags:
      - Guild
  /guild/{guild_id}/channel/{channel_id}/roles:
    get:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Channel ID
        example: 2230469276416868352
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/guild.ChannelRolePermission'
                type: array
          description: List of role permissions
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "406":
          content:
            application/json:
              schema:
                type: string
          description: Permissions required
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: List channel role permissions
      tags:
      - Guild Roles
  /guild/{guild_id}/channel/{channel_id}/roles/{role_id}:
    delete:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Channel ID
        example: 2230469276416868352
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Role ID
        example: 2230469276416868352
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Role or channel not found
        "406":
          content:
            application/json:
              schema:
                type: string
          description: Permissions required
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Remove channel role permission
      tags:
      - Guild Roles
    get:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Channel ID
        example: 2230469276416868352
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Role ID
        example: 2230469276416868352
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/guild.ChannelRolePermission'
          description: Role permission
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Not found
        "406":
          content:
            application/json:
              schema:
                type: string
          description: Permissions required
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Get channel role permission
      tags:
      - Guild Roles
    patch:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Channel ID
        example: 2230469276416868352
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Role ID
        example: 2230469276416868352
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guild.ChannelRolePermissionRequest'
        description: Permission mask
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Role or channel not found
        "406":
          content:
            application/json:
              schema:
                type: string
          description: Permissions required
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Update channel role permission
      tags:
      - Guild Roles
    put:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Channel ID
        example: 2230469276416868352
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Role ID
        example: 2230469276416868352
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guild.ChannelRolePermissionRequest'
        description: Permission mask
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Role or channel not found
        "406":
          content:
            application/json:
              schema:
                type: string
          description: Permissions required
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Set channel role permission (create or replace)
      tags:
      - Guild Roles
  /guild/{guild_id}/icon:
    post:
      description: Creates an icon placeholder and returns upload info. Only guild
        owner may create.
      parameters:
      - description: Guild ID
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guild.CreateIconRequest'
        description: Icon creation request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.IconUpload'
          description: Icon upload data
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Create guild icon metadata
      tags:
      - Guild
  /guild/{guild_id}/icons:
    get:
      description: Returns a list of previously created icons for a guild. Only the
        guild owner may access this list.
      parameters:
      - description: Guild ID
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Icon'
                type: array
          description: List of icons
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: List guild icons
      tags:
      - Guild
  /guild/{guild_id}/icons/{icon_id}:
    delete:
      description: Deletes a guild icon. Only the guild owner may delete.
      parameters:
      - description: Guild ID
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Icon ID
        explode: false
        in: path
        name: icon_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Delete guild icon by ID
      tags:
      - Guild
  /guild/{guild_id}/member/{user_id}/roles:
    get:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: User ID
        example: 2230469276416868352
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Role'
                type: array
          description: List of user roles
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Member not found
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Get member roles
      tags:
      - Guild Roles
  /guild/{guild_id}/member/{user_id}/roles/{role_id}:
    delete:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: User ID
        example: 2230469276416868352
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Role ID
        example: 2230469276416868352
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Member not found
        "406":
          content:
            application/json:
              schema:
                type: string
          description: Permissions required
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Remove role from member
      tags:
      - Guild Roles
    put:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: User ID
        example: 2230469276416868352
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Role ID
        example: 2230469276416868352
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Member not found
        "406":
          content:
            application/json:
              schema:
                type: string
          description: Permissions required
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Assign role to member
      tags:
      - Guild Roles
  /guild/{guild_id}/members:
    get:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Member'
                type: array
          description: Ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Get guild members
      tags:
      - Guild
  /guild/{guild_id}/roles:
    get:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Role'
                type: array
          description: Roles list
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Get guild roles
      tags:
      - Guild Roles
    post:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guild.CreateGuildRoleRequest'
        description: Role data
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Role'
          description: Role
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "406":
          content:
            application/json:
              schema:
                type: string
          description: Permissions required
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Create guild role
      tags:
      - Guild Roles
  /guild/{guild_id}/roles/{role_id}:
    delete:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Role ID
        example: 2230469276416868352
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Deleted
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Role not found
        "406":
          content:
            application/json:
              schema:
                type: string
          description: Permissions required
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Delete guild role
      tags:
      - Guild Roles
    patch:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Role ID
        example: 2230469276416868352
        explode: false
        in: path
        name: role_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guild.PatchGuildRoleRequest'
        description: Role changes
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Role'
          description: Role
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Role not found
        "406":
          content:
            application/json:
              schema:
                type: string
          description: Permissions required
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Update guild role
      tags:
      - Guild Roles
  /guild/{guild_id}/systemch:
    patch:
      parameters:
      - description: Guild ID
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guild.SetGuildSystemMessagesChannelRequest'
        description: Set system messages channel
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Guild'
          description: Guild
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect request body
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Set system messages channel
      tags:
      - Guild
  /guild/{guild_id}/voice/move:
    post:
      description: Move a member to another voice channel and send them connection
        info (SFU URL + token). Requires administrator or PermVoiceMoveMembers.
      parameters:
      - description: Guild ID
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guild.MoveMemberRequest'
        description: Move request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/guild.MoveMemberResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
      summary: Move member to voice channel
      tags:
      - Guild
  /guild/{guild_id}/voice/{channel_id}/join:
    post:
      description: Returns signaling path and a short-lived SFU token to connect to
        the SFU for this channel.
      parameters:
      - description: Guild ID
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Channel ID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/guild.JoinVoiceResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "503":
          content:
            application/json:
              schema:
                type: string
          description: No SFU available in region
      summary: Join voice channel (get SFU signaling info)
      tags:
      - Guild
  /guild/{guild_id}/voice/{channel_id}/region:
    patch:
      description: Sets or clears preferred SFU region for a voice channel. Empty
        region clears override.
      parameters:
      - description: Guild ID
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Channel ID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/guild.SetVoiceRegionRequest'
        description: Region payload
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/guild.SetVoiceRegionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
      summary: Set channel voice region
      tags:
      - Guild
  /message/channel/{channel_id}:
    get:
      parameters:
      - description: Channel id
        example: 2230469276416868352
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Start point for messages
        example: 2230469276416868352
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: Select direction
        example: before
        explode: true
        in: query
        name: direction
        required: false
        schema:
          enum:
          - before
          - after
          - around
          type: string
        style: form
      - description: Message count limit
        example: 30
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Message'
                type: array
          description: Messages
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Get messages
      tags:
      - Message
    post:
      parameters:
      - description: Channel id
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/message.SendMessageRequest'
        description: Message data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Message'
          description: Message
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Send message
      tags:
      - Message
  /message/channel/{channel_id}/attachment:
    post:
      parameters:
      - description: Channel id
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/message.UploadAttachmentRequest'
        description: Attachment data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.AttachmentUpload'
          description: Attachment upload data
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "413":
          content:
            application/json:
              schema:
                type: string
          description: File too large
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Create attachment
      tags:
      - Message
  /message/channel/{channel_id}/typing:
    post:
      parameters:
      - description: Channel id
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: typing status sent
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Send user typing event in the channel
      tags:
      - Message
  /message/channel/{channel_id}/{message_id}:
    delete:
      parameters:
      - description: Message id
        explode: false
        in: path
        name: message_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Channel id
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Delete message
      tags:
      - Message
    patch:
      parameters:
      - description: Message id
        explode: false
        in: path
        name: message_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Channel id
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/message.UpdateMessageRequest'
        description: Message data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Message'
          description: Message
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Update message
      tags:
      - Message
  /message/channel/{channel_id}/{message_id}/ack:
    post:
      parameters:
      - description: Channel id
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Message id
        explode: false
        in: path
        name: message_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Read state updated
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Set channel read state for current user
      tags:
      - Message
  /search/{guild_id}/messages:
    post:
      parameters:
      - description: Guild id
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/search.MessageSearchRequest'
        description: Search request data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/search.MessageSearchResponse'
                type: array
          description: Messages
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Search messages
      tags:
      - Search
  /upload/attachments/{channel_id}/{attachment_id}:
    post:
      description: Uploads a file for an existing attachment. Stores the original
        as-is and generates a WebP preview for images/videos. Finalizes the attachment
        metadata.
      parameters:
      - description: Channel ID
        explode: false
        in: path
        name: channel_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Attachment ID
        explode: false
        in: path
        name: attachment_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              items:
                type: integer
              type: array
        description: Binary file to upload
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Created
        "204":
          content:
            application/json:
              schema:
                type: string
          description: No Content (already uploaded)
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Attachment not found
        "413":
          content:
            application/json:
              schema:
                type: string
          description: File too large
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Upload attachment
      tags:
      - Upload
  /upload/avatars/{user_id}/{avatar_id}:
    post:
      description: Uploads an avatar image. Resizes to max 128x128 and converts to
        WebP <= 250KB. Finalizes avatar metadata.
      parameters:
      - description: User ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Avatar ID
        explode: false
        in: path
        name: avatar_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              items:
                type: integer
              type: array
        description: Binary image payload
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Created
        "204":
          content:
            application/json:
              schema:
                type: string
          description: No Content (already uploaded)
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Avatar not found
        "413":
          content:
            application/json:
              schema:
                type: string
          description: File too large
        "415":
          content:
            application/json:
              schema:
                type: string
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Upload user avatar
      tags:
      - Upload
  /upload/icons/{guild_id}/{icon_id}:
    post:
      description: Uploads a guild icon. Resizes to max 128x128 and converts to WebP
        <= 250KB. Only guild owner can upload. Sets guild icon and emits update.
      parameters:
      - description: Guild ID
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Icon ID
        explode: false
        in: path
        name: icon_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              items:
                type: integer
              type: array
        description: Binary image payload
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Created
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "413":
          content:
            application/json:
              schema:
                type: string
          description: File too large
        "415":
          content:
            application/json:
              schema:
                type: string
          description: Unsupported Media Type
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Upload guild icon
      tags:
      - Upload
  /user/me:
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user.ModifyUserRequest'
        description: Modify user data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Incorrect ID
        "404":
          content:
            application/json:
              schema:
                type: string
          description: User not found
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Something bad happened
      summary: Get user
      tags:
      - User
  /user/me/avatar:
    post:
      description: Creates an avatar placeholder and returns upload info. Upload the
        binary to attachments service.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user.CreateAvatarRequest'
        description: Avatar creation request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.AvatarUpload'
          description: Avatar upload data
      summary: Create avatar metadata
      tags:
      - User
  /user/me/avatars:
    get:
      description: Returns a list of previously created avatars for the authenticated
        user.
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Avatar'
                type: array
          description: List of avatars
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: List my avatars
      tags:
      - User
  /user/me/avatars/{avatar_id}:
    delete:
      parameters:
      - description: Avatar ID
        explode: false
        in: path
        name: avatar_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Delete my avatar by ID
      tags:
      - User
  /user/me/channels:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Channel'
                type: array
          description: Channels
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: List all DM and Group DM channels for current user
      tags:
      - User
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user.CreateDMRequest'
        description: Recipient data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Channel'
          description: Created DM channel
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                type: string
          description: User not found
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Create DM channel
      tags:
      - User
  /user/me/channels/group:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user.CreateDMManyRequest'
        description: Group DM data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Channel'
          description: Created group DM channel
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Not found
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Create group DM channel
      tags:
      - User
  /user/me/friends:
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user.UnfriendRequest'
        description: Unfriend
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Remove user from friends
      tags:
      - User
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.User'
                type: array
          description: Friends list
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Get my friends
      tags:
      - User
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user.CreateFriendRequestRequest'
        description: Friend request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Send a friend request by discriminator
      tags:
      - User
  /user/me/friends/requests:
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user.FriendRequestAction'
        description: Decline
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Decline a friend request
      tags:
      - User
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.User'
                type: array
          description: Request senders
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Get incoming friend requests
      tags:
      - User
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user.FriendRequestAction'
        description: Accept
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Accept a friend request
      tags:
      - User
  /user/me/friends/{user_id}:
    get:
      parameters:
      - description: User id
        example: 2230469276416868352
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Channel'
          description: DM channel
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                type: string
          description: User not found
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Get or create DM with a user
      tags:
      - User
  /user/me/guilds:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Guild'
                type: array
          description: Guilds list
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                type: string
          description: User not found
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Get user guilds
      tags:
      - User
  /user/me/guilds/{guild_id}:
    delete:
      parameters:
      - description: Guild id
        example: "2230469276416868352"
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Guild not found
        "406":
          content:
            application/json:
              schema:
                type: string
          description: Cannot leave own guild
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Leave guild
      tags:
      - User
  /user/me/guilds/{guild_id}/member:
    get:
      parameters:
      - description: Guild id
        example: 2230469276416868352
        explode: false
        in: path
        name: guild_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Member'
          description: Guild member
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Member not found
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Get user guild member
      tags:
      - User
  /user/me/settings:
    get:
      parameters:
      - description: Client known version
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user.UserSettingsResponse'
          description: User settings and version
        "204":
          content:
            application/json:
              schema:
                type: string
          description: No changes
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Get current user settings (optional version gating)
      tags:
      - User
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.UserSettingsData'
        description: User settings
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Update current user settings (replaces and bumps version)
      tags:
      - User
  /user/{user_id}:
    get:
      parameters:
      - description: User ID or 'me'
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.User'
          description: User data
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                type: string
          description: User not found
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
      summary: Get user
      tags:
      - User
  /voice/regions:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/voice.VoiceRegionsResponse'
          description: OK
      summary: List available voice regions
      tags:
      - Voice
  /webhook/attachments/finalize:
    post:
      description: Persist completed attachment metadata after upload
      parameters:
      - description: JWT token
        explode: false
        in: header
        name: X-Webhook-Token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/attachments.FinalizeRequest'
        description: Finalize payload
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                type: string
          description: Bad gateway
        "503":
          content:
            application/json:
              schema:
                type: string
          description: Service unavailable
      summary: Finalize attachment metadata
      tags:
      - Webhook
  /webhook/sfu/channel/alive:
    post:
      description: Updates channel TTL to keep it alive in system cache for next connections
      parameters:
      - description: JWT token
        explode: false
        in: header
        name: X-Webhook-Token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sfu.ChannelAlive'
        description: Channel liveness data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Unable to set status
        "502":
          content:
            application/json:
              schema:
                type: string
          description: Bad gateway
        "503":
          content:
            application/json:
              schema:
                type: string
          description: Service unavailable
      summary: SFU update channel TTL
      tags:
      - Webhook
  /webhook/sfu/heartbeat:
    post:
      description: Register or refresh SFU instance for discovery
      parameters:
      - description: JWT token
        explode: false
        in: header
        name: X-Webhook-Token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sfu.HeartbeatRequest'
        description: Heartbeat payload
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                type: string
          description: Bad gateway
        "503":
          content:
            application/json:
              schema:
                type: string
          description: Service unavailable
      summary: SFU heartbeat
      tags:
      - Webhook
  /webhook/sfu/voice/join:
    post:
      description: Add client to voice channel participants list
      parameters:
      - description: JWT token
        explode: false
        in: header
        name: X-Webhook-Token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sfu.ChannelUserJoin'
        description: Client join data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Unable to set status
        "502":
          content:
            application/json:
              schema:
                type: string
          description: Bad gateway
        "503":
          content:
            application/json:
              schema:
                type: string
          description: Service unavailable
      summary: SFU voice join
      tags:
      - Webhook
  /webhook/sfu/voice/leave:
    post:
      description: Remove client from voice channel participants list
      parameters:
      - description: JWT token
        explode: false
        in: header
        name: X-Webhook-Token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sfu.ChannelUserLeave'
        description: Client join data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Unable to set status
        "502":
          content:
            application/json:
              schema:
                type: string
          description: Bad gateway
        "503":
          content:
            application/json:
              schema:
                type: string
          description: Service unavailable
      summary: SFU voice leave
      tags:
      - Webhook
components:
  schemas:
    attachments.FinalizeRequest:
      properties:
        author_id:
          type: integer
        channel_id:
          type: integer
        content_type:
          type: string
        file_size:
          type: integer
        height:
          type: integer
        id:
          type: integer
        name:
          type: string
        preview_url:
          type: string
        url:
          type: string
        width:
          type: integer
    auth.ConfirmationRequest:
      properties:
        discriminator:
          description: Unique discriminator
          example: uniquename
          type: string
        id:
          description: User ID
          example: 2230469276416868352
          type: integer
        name:
          description: User name
          example: FancyUserName
          type: string
        password:
          description: User password
          example: VerYstR0NgP@66WoR6
          type: string
        token:
          description: Registration token
          example: just_a_randomly_generated_text
          type: string
    auth.LoginRequest:
      properties:
        email:
          description: User Email
          example: user@example.com
          type: string
        password:
          description: User password
          example: VerYstR0NgP@66WoR6
          type: string
    auth.LoginResponse:
      example:
        refresh_token: refresh_token
        token: token
      properties:
        refresh_token:
          description: Refresh token. Used to refresh authentication token.
          type: string
        token:
          description: Authentication token
          type: string
    auth.PasswordRecoveryRequest:
      properties:
        email:
          description: User Email to receive recovery email
          example: user@example.com
          type: string
    auth.PasswordResetRequest:
      properties:
        id:
          description: User ID
          example: 2230469276416868352
          type: integer
        password:
          description: New password
          example: N3wVerYstR0NgP@66WoR6
          type: string
        token:
          description: Reset token
          example: just_a_random_text_from_email
          type: string
    auth.RefreshTokenResponse:
      example:
        refresh_token: refresh_token
        token: token
      properties:
        refresh_token:
          description: Refresh token. Used to refresh authentication token.
          type: string
        token:
          description: Authentication token
          type: string
    auth.RegisterRequest:
      properties:
        email:
          description: User Email
          example: user@example.com
          type: string
    dto.Attachment:
      example:
        filename: image.png
        content_type: image/png
        size: 1000000
        preview_url: https://example.com/image_preview.webp
        width: 800
        url: https://example.com/image.png
        height: 600
      properties:
        content_type:
          description: File mime type
          example: image/png
          type: string
        filename:
          description: File name
          example: image.png
          type: string
        height:
          description: Image dimensions in pixels
          example: 600
          type: integer
        preview_url:
          description: Preview URL for image/video
          example: https://example.com/image_preview.webp
          type: string
        size:
          description: FileSize in bytes
          example: 1000000
          type: integer
        url:
          description: URL to download the file
          example: https://example.com/image.png
          type: string
        width:
          description: Image dimensions in pixels
          example: 800
          type: integer
    dto.AttachmentUpload:
      example:
        file_name: image.png
        id: 2230469276416868352
        channel_id: 2230469276416868352
      properties:
        channel_id:
          description: Channel ID the attachment was sent to
          example: 2230469276416868352
          type: integer
        file_name:
          description: File name
          example: image.png
          type: string
        id:
          description: Attachment ID
          example: 2230469276416868352
          type: integer
    dto.Avatar:
      example:
        content_type: image/webp
        size: 245678
        width: 128
        id: 2230469276416868352
        url: https://cdn.example.com/avatars/2230/2231.webp
        height: 128
      properties:
        content_type:
          example: image/webp
          type: string
        height:
          example: 128
          type: integer
        id:
          example: 2230469276416868352
          type: integer
        size:
          example: 245678
          type: integer
        url:
          example: https://cdn.example.com/avatars/2230/2231.webp
          type: string
        width:
          example: 128
          type: integer
    dto.AvatarData:
      example:
        content_type: image/webp
        size: 245678
        width: 128
        id: 2230469276416868352
        url: https://cdn.example.com/avatars/2230/2231.webp
        height: 128
      properties:
        content_type:
          example: image/webp
          type: string
        height:
          example: 128
          type: integer
        id:
          example: 2230469276416868352
          type: integer
        size:
          example: 245678
          type: integer
        url:
          example: https://cdn.example.com/avatars/2230/2231.webp
          type: string
        width:
          example: 128
          type: integer
    dto.AvatarUpload:
      example:
        user_id: 2230469276416868352
        id: 2230469276416868352
      properties:
        id:
          example: 2230469276416868352
          type: integer
        user_id:
          example: 2230469276416868352
          type: integer
    dto.Channel:
      example:
        private: false
        participant_id: 2230469276416868352
        roles:
        - 2230469276416868352
        created_at: created_at
        type: 0
        last_message_id: 2230469276416868352
        parent_id: 2230469276416868352
        permissions: 0
        guild_id: 2230469276416868352
        name: channel-name
        topic: Just a channel topic
        id: 2230469276416868352
        position: 4
      properties:
        created_at:
          description: Timestamp of channel creation
          type: string
        guild_id:
          description: Guild ID channel was created in
          example: 2230469276416868352
          type: integer
        id:
          description: Channel ID
          example: 2230469276416868352
          type: integer
        last_message_id:
          description: ID of the last message in the channel
          example: 2230469276416868352
          type: integer
        name:
          description: "Channel name, without spaces"
          example: channel-name
          type: string
        parent_id:
          description: Parent channel id
          example: 2230469276416868352
          type: integer
        participant_id:
          description: "For DM channels: the other participant's user ID"
          example: 2230469276416868352
          type: integer
        permissions:
          description: Permissions. Check the permissions documentation for more info.
          type: integer
        position:
          description: Channel position
          example: 4
          type: integer
        private:
          default: false
          description: Whether the channel is private. Private channels can only be
            seen by users with roles assigned to this channel.
          type: boolean
        roles:
          description: Roles IDs
          example:
          - 2230469276416868352
          items:
            type: integer
          type: array
          uniqueItems: false
        topic:
          description: Channel topic.
          example: Just a channel topic
          type: string
        type:
          description: Channel type
          example: 0
          type: integer
          x-enum-comments:
            ChannelTypeDM: DM channel. Can't be created in Guild
            ChannelTypeGroupDM: Group DM channel. Can't be created in Guild'
            ChannelTypeGuild: Default text channel in guild
            ChannelTypeGuildCategory: Category channel in guild
            ChannelTypeGuildVoice: Voice channel in guild
            ChannelTypeThread: Thread channel
          x-enum-varnames:
          - ChannelTypeGuild
          - ChannelTypeGuildVoice
          - ChannelTypeGuildCategory
          - ChannelTypeDM
          - ChannelTypeGroupDM
          - ChannelTypeThread
    dto.Guild:
      example:
        owner: 2230469276416868352
        public: false
        permissions: 0
        icon:
          width: 128
          filesize: 12345
          id: 2230469276416868352
          url: https://cdn.example.com/icons/2230/2231.webp
          height: 128
        name: My Guild
        id: 2230469276416868352
      properties:
        icon:
          $ref: '#/components/schemas/dto.Icon'
        id:
          description: Guild ID
          example: 2230469276416868352
          type: integer
        name:
          description: Guild Name
          example: My Guild
          type: string
        owner:
          description: Owner ID
          example: 2230469276416868352
          type: integer
        permissions:
          default: 7927905
          description: Default guild Permissions. Check the permissions documentation
            for more info.
          type: integer
        public:
          default: false
          description: Whether the guild is public
          type: boolean
    dto.GuildInvite:
      example:
        code: code
        expires_at: expires_at
        guild_id: 6
        created_at: created_at
        id: 1
        author_id: 0
      properties:
        author_id:
          type: integer
        code:
          type: string
        created_at:
          type: string
        expires_at:
          type: string
        guild_id:
          type: integer
        id:
          type: integer
    dto.Icon:
      description: Icon metadata
      example:
        width: 128
        filesize: 12345
        id: 2230469276416868352
        url: https://cdn.example.com/icons/2230/2231.webp
        height: 128
      properties:
        filesize:
          example: 12345
          type: integer
        height:
          example: 128
          type: integer
        id:
          example: 2230469276416868352
          type: integer
        url:
          example: https://cdn.example.com/icons/2230/2231.webp
          type: string
        width:
          example: 128
          type: integer
    dto.IconUpload:
      example:
        guild_id: 2230469276416868352
        id: 2230469276416868352
      properties:
        guild_id:
          example: 2230469276416868352
          type: integer
        id:
          example: 2230469276416868352
          type: integer
    dto.InvitePreview:
      example:
        guild:
          owner: 2230469276416868352
          public: false
          permissions: 0
          icon:
            width: 128
            filesize: 12345
            id: 2230469276416868352
            url: https://cdn.example.com/icons/2230/2231.webp
            height: 128
          name: My Guild
          id: 2230469276416868352
        code: code
        expires_at: expires_at
        created_at: created_at
        members_count: 1
        id: 6
        author_id: 0
      properties:
        author_id:
          type: integer
        code:
          type: string
        created_at:
          type: string
        expires_at:
          type: string
        guild:
          $ref: '#/components/schemas/dto.Guild'
        id:
          type: integer
        members_count:
          type: integer
    dto.Member:
      example:
        join_at: join_at
        roles:
        - 2230469276416868352
        avatar: 2230469276416868352
        user:
          name: FancyUserName
          avatar:
            content_type: image/webp
            size: 245678
            width: 128
            id: 2230469276416868352
            url: https://cdn.example.com/avatars/2230/2231.webp
            height: 128
          id: 2230469276416868352
          discriminator: uniquename
        username: FancyUserName
      properties:
        avatar:
          description: Avatar ID
          example: 2230469276416868352
          type: integer
        join_at:
          description: Join date
          type: string
        roles:
          description: List of assigned role IDs
          example:
          - 2230469276416868352
          items:
            type: integer
          type: array
          uniqueItems: false
        user:
          $ref: '#/components/schemas/dto.User'
        username:
          description: Username in this guild
          example: FancyUserName
          type: string
    dto.Message:
      example:
        attachments:
        - filename: image.png
          content_type: image/png
          size: 1000000
          preview_url: https://example.com/image_preview.webp
          width: 800
          url: https://example.com/image.png
          height: 600
        - filename: image.png
          content_type: image/png
          size: 1000000
          preview_url: https://example.com/image_preview.webp
          width: 800
          url: https://example.com/image.png
          height: 600
        updated_at: updated_at
        author:
          name: FancyUserName
          avatar:
            content_type: image/webp
            size: 245678
            width: 128
            id: 2230469276416868352
            url: https://cdn.example.com/avatars/2230/2231.webp
            height: 128
          id: 2230469276416868352
          discriminator: uniquename
        id: 2230469276416868352
        type: 0
        channel_id: 2230469276416868352
        content: Hello world!
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/dto.Attachment'
          type: array
          uniqueItems: false
        author:
          $ref: '#/components/schemas/dto.User'
        channel_id:
          description: Channel id the message was sent to
          example: 2230469276416868352
          type: integer
        content:
          example: Hello world!
          type: string
        id:
          description: Message ID
          example: 2230469276416868352
          type: integer
        type:
          example: 0
          type: integer
        updated_at:
          description: Timestamp of the last message edit
          type: string
    dto.Role:
      example:
        color: 0
        permissions: 6
        guild_id: 2230469276416868352
        name: role-name
        id: 2230469276416868352
      properties:
        color:
          description: Role color. Will change username color. Represent RGB color
            in one Integer value.
          type: integer
        guild_id:
          description: Guild ID
          example: 2230469276416868352
          type: integer
        id:
          description: Role ID
          example: 2230469276416868352
          type: integer
        name:
          description: Role name
          example: role-name
          type: string
        permissions:
          description: Role permissions. Check the permissions documentation for more
            info.
          type: integer
    dto.User:
      description: Guild member data
      example:
        name: FancyUserName
        avatar:
          content_type: image/webp
          size: 245678
          width: 128
          id: 2230469276416868352
          url: https://cdn.example.com/avatars/2230/2231.webp
          height: 128
        id: 2230469276416868352
        discriminator: uniquename
      properties:
        avatar:
          $ref: '#/components/schemas/dto.AvatarData'
        discriminator:
          example: uniquename
          type: string
        id:
          example: 2230469276416868352
          type: integer
        name:
          example: FancyUserName
          type: string
    guild.ChannelOrder:
      properties:
        id:
          description: Channel ID.
          example: 2230469276416868352
          type: integer
        position:
          description: New channel position.
          example: 4
          type: integer
    guild.ChannelRolePermission:
      example:
        deny: 0
        role_id: 2230469276416868352
        accept: 0
      properties:
        accept:
          description: Allowed permission bits mask
          example: 0
          type: integer
        deny:
          description: Denied permission bits mask
          example: 0
          type: integer
        role_id:
          description: Role ID
          example: 2230469276416868352
          type: integer
    guild.ChannelRolePermissionRequest:
      properties:
        accept:
          description: Allowed permission bits mask
          example: 0
          type: integer
        deny:
          description: Denied permission bits mask
          example: 0
          type: integer
    guild.CreateGuildChannelCategoryRequest:
      properties:
        name:
          description: Category channel name
          example: category-name
          type: string
        position:
          default: 0
          description: "Channel position in the list. Should be set as the last position\
            \ in the channel list, or it will be one of the first in the list."
          type: integer
        private:
          default: false
          description: Whether the category channel is private. Private channels can
            only be seen by users with roles assigned to this channel.
          type: boolean
    guild.CreateGuildChannelRequest:
      properties:
        name:
          description: Channel name
          example: channel-name
          type: string
        parent_id:
          description: Parent channel ID. A Parent channel can only be a category
            channel.
          example: 2230469276416868352
          type: integer
        position:
          default: 0
          description: "Channel position in the list. Should be set as the last position\
            \ in the channel list, or it will be one of the first in the list."
          type: integer
        private:
          default: false
          description: Whether the channel is private. Private channels can only be
            seen by users with roles assigned to this channel.
          type: boolean
        type:
          description: Channel type
          example: 0
          type: integer
          x-enum-comments:
            ChannelTypeDM: DM channel. Can't be created in Guild
            ChannelTypeGroupDM: Group DM channel. Can't be created in Guild'
            ChannelTypeGuild: Default text channel in guild
            ChannelTypeGuildCategory: Category channel in guild
            ChannelTypeGuildVoice: Voice channel in guild
            ChannelTypeThread: Thread channel
          x-enum-varnames:
          - ChannelTypeGuild
          - ChannelTypeGuildVoice
          - ChannelTypeGuildCategory
          - ChannelTypeDM
          - ChannelTypeGroupDM
          - ChannelTypeThread
    guild.CreateGuildRequest:
      properties:
        icon_id:
          description: Icon ID
          example: 2230469276416868352
          type: integer
        name:
          description: Guild name
          example: My unique guild
          type: string
        public:
          default: false
          description: Whether the guild is public
          type: boolean
    guild.CreateGuildRoleRequest:
      properties:
        color:
          description: RGB int value
          example: 16777215
          type: integer
        name:
          description: Role name
          example: New Role
          type: string
        permissions:
          default: 0
          description: Permissions bitset
          type: integer
    guild.CreateIconRequest:
      properties:
        content_type:
          example: image/png
          type: string
        file_size:
          example: 120000
          type: integer
    guild.CreateInviteRequest:
      properties:
        expires_in_sec:
          description: Expiration time in seconds. 0 means unlimited.
          example: 86400
          type: integer
    guild.JoinVoiceResponse:
      example:
        sfu_url: sfu_url
        sfu_token: sfu_token
      properties:
        sfu_token:
          type: string
        sfu_url:
          type: string
    guild.MoveMemberRequest:
      properties:
        channel_id:
          type: integer
        from:
          type: integer
        user_id:
          type: integer
    guild.MoveMemberResponse:
      example:
        from_sfu_token: from_sfu_token
        ok: true
        from_sfu_url: from_sfu_url
      properties:
        from_sfu_token:
          type: string
        from_sfu_url:
          type: string
        ok:
          type: boolean
    guild.PatchGuildChannelOrderRequest:
      properties:
        channels:
          description: List of channels to change order.
          items:
            $ref: '#/components/schemas/guild.ChannelOrder'
          type: array
          uniqueItems: false
    guild.PatchGuildChannelRequest:
      properties:
        name:
          description: Channel name.
          example: new-channel-name
          type: string
        parent_id:
          description: Parent channel ID. A Parent channel can only be a category
            channel.
          example: 2230469276416868352
          type: integer
        private:
          default: false
          description: Whether the channel is private. Private channels can only be
            seen by users with roles assigned to this channel.
          type: boolean
        topic:
          description: Channel topic.
          example: Just a channel topic
          type: string
    guild.PatchGuildRoleRequest:
      properties:
        color:
          description: RGB int value
          example: 16711680
          type: integer
        name:
          description: Role name
          example: Moderators
          type: string
        permissions:
          description: Permissions bitset
          type: integer
    guild.SetGuildSystemMessagesChannelRequest:
      properties:
        channel_id:
          description: Channel ID
          example: 2230469276416868352
          type: integer
    guild.SetVoiceRegionRequest:
      properties:
        region:
          type: string
    guild.SetVoiceRegionResponse:
      example:
        guild_id: 6
        region: region
        channel_id: 0
      properties:
        channel_id:
          type: integer
        guild_id:
          type: integer
        region:
          type: string
    guild.UpdateGuildRequest:
      properties:
        icon_id:
          description: Icon ID
          example: 2230469276416868352
          type: integer
        name:
          description: Guild name
          example: New guild name
          type: string
        permissions:
          default: 7927905
          description: Permissions. Check the permissions documentation for more info.
          type: integer
        public:
          default: false
          description: Whether the guild is public
          type: boolean
    message.SendMessageRequest:
      properties:
        attachments:
          description: IDs of attached files
          example:
          - 2230469276416868352
          items:
            type: integer
          type: array
          uniqueItems: false
        content:
          description: Message content
          example: Hello world!
          type: string
        mentions:
          description: IDs of mentioned users
          example:
          - 2230469276416868352
          items:
            type: integer
          type: array
          uniqueItems: false
    message.UpdateMessageRequest:
      properties:
        content:
          description: Message content
          example: Hello world!
          type: string
    message.UploadAttachmentRequest:
      properties:
        content_type:
          description: File content-type meta data
          example: image/png
          type: string
        file_size:
          description: File size in bytes
          example: 100000
          type: integer
        filename:
          description: File name
          example: image.png
          type: string
        height:
          description: Image height in pixels
          example: 600
          type: integer
        width:
          description: Image width in pixels
          example: 800
          type: integer
    model.ChannelType:
      description: Channel type
      example: 0
      type: integer
      x-enum-comments:
        ChannelTypeDM: DM channel. Can't be created in Guild
        ChannelTypeGroupDM: Group DM channel. Can't be created in Guild'
        ChannelTypeGuild: Default text channel in guild
        ChannelTypeGuildCategory: Category channel in guild
        ChannelTypeGuildVoice: Voice channel in guild
        ChannelTypeThread: Thread channel
      x-enum-varnames:
      - ChannelTypeGuild
      - ChannelTypeGuildVoice
      - ChannelTypeGuildCategory
      - ChannelTypeDM
      - ChannelTypeGroupDM
      - ChannelTypeThread
    model.Devices:
      example:
        audio_input_level: 5.637376656633329
        auto_gain_control: true
        audio_output_device: audio_output_device
        audio_output_level: 7.061401241503109
        audio_input_threshold: 2.3021358869347655
        echo_cancellation: true
        video_device: video_device
        noise_suppression: true
        audio_input_device: audio_input_device
      properties:
        audio_input_device:
          type: string
        audio_input_level:
          type: number
        audio_input_threshold:
          type: number
        audio_output_device:
          type: string
        audio_output_level:
          type: number
        auto_gain_control:
          type: boolean
        echo_cancellation:
          type: boolean
        noise_suppression:
          type: boolean
        video_device:
          type: string
    model.NotificationsType:
      type: integer
      x-enum-varnames:
      - NotificationsAll
      - NotificationsMentions
      - NotificationsNone
    model.Status:
      example:
        custom_status_text: custom_status_text
        status: status
      properties:
        custom_status_text:
          type: string
        status:
          type: string
    model.UserDMChannels:
      example:
        hidden: true
        user_id: 2
        hidden_after: 3
        channel_id: 9
      properties:
        channel_id:
          type: integer
        hidden:
          type: boolean
        hidden_after:
          type: integer
        user_id:
          type: integer
    model.UserSettingsAppearance:
      example:
        chat_font_scale: 1
        color_scheme: color_scheme
        chat_spacing: 5
      properties:
        chat_font_scale:
          type: integer
        chat_spacing:
          type: integer
        color_scheme:
          type: string
    model.UserSettingsData:
      example:
        favorite_gifs:
        - favorite_gifs
        - favorite_gifs
        dm_channels:
        - hidden: true
          user_id: 2
          hidden_after: 3
          channel_id: 9
        - hidden: true
          user_id: 2
          hidden_after: 3
          channel_id: 9
        appearance:
          chat_font_scale: 1
          color_scheme: color_scheme
          chat_spacing: 5
        devices:
          audio_input_level: 5.637376656633329
          auto_gain_control: true
          audio_output_device: audio_output_device
          audio_output_level: 7.061401241503109
          audio_input_threshold: 2.3021358869347655
          echo_cancellation: true
          video_device: video_device
          noise_suppression: true
          audio_input_device: audio_input_device
        guilds:
        - selected_channel: 7
          guild_id: 1
          position: 6
          notifications:
            roles: true
            global: true
            muted: true
            notifications: 1
        - selected_channel: 7
          guild_id: 1
          position: 6
          notifications:
            roles: true
            global: true
            muted: true
            notifications: 1
        language: language
        forced_presence: forced_presence
        guild_folders:
        - color: 4
          guilds:
          - 7
          - 7
          name: name
          position: 1
        - color: 4
          guilds:
          - 7
          - 7
          name: name
          position: 1
        status:
          custom_status_text: custom_status_text
          status: status
      properties:
        appearance:
          $ref: '#/components/schemas/model.UserSettingsAppearance'
        devices:
          $ref: '#/components/schemas/model.Devices'
        dm_channels:
          items:
            $ref: '#/components/schemas/model.UserDMChannels'
          type: array
          uniqueItems: false
        favorite_gifs:
          items:
            type: string
          type: array
          uniqueItems: false
        forced_presence:
          type: string
        guild_folders:
          items:
            $ref: '#/components/schemas/model.UserSettingsGuildFolders'
          type: array
          uniqueItems: false
        guilds:
          items:
            $ref: '#/components/schemas/model.UserSettingsGuilds'
          type: array
          uniqueItems: false
        language:
          type: string
        status:
          $ref: '#/components/schemas/model.Status'
    model.UserSettingsGuildFolders:
      example:
        color: 4
        guilds:
        - 7
        - 7
        name: name
        position: 1
      properties:
        color:
          type: integer
        guilds:
          items:
            type: integer
          type: array
          uniqueItems: false
        name:
          type: string
        position:
          type: integer
    model.UserSettingsGuilds:
      example:
        selected_channel: 7
        guild_id: 1
        position: 6
        notifications:
          roles: true
          global: true
          muted: true
          notifications: 1
      properties:
        guild_id:
          type: integer
        notifications:
          $ref: '#/components/schemas/model.UserSettingsNotifications'
        position:
          type: integer
        selected_channel:
          type: integer
    model.UserSettingsNotifications:
      example:
        roles: true
        global: true
        muted: true
        notifications: 1
      properties:
        global:
          type: boolean
        muted:
          type: boolean
        notifications:
          type: integer
          x-enum-varnames:
          - NotificationsAll
          - NotificationsMentions
          - NotificationsNone
        roles:
          type: boolean
    search.MessageSearchRequest:
      properties:
        author_id:
          description: Author ID to search by.
          example: 2230469276416868352
          type: integer
        channel_id:
          description: Channel ID to search in. Required.
          example: 2230469276416868352
          type: integer
        content:
          description: Content contains a string to search for. Might be empty if
            need to search by other parameters.
          example: Hello world!
          type: string
        has:
          description: List of specific features to search for.
          items:
            enum:
            - url
            - image
            - video
            - file
            type: string
          type: array
          uniqueItems: false
        mentions:
          description: Mentions contains a list of int64 user IDs.
          example:
          - 2230469276416868352
          items:
            type: integer
          type: array
          uniqueItems: false
        page:
          default: 0
          description: Page number to get. Starts from 0.
          type: integer
    search.MessageSearchResponse:
      example:
        pages: 0
        messages:
        - attachments:
          - filename: image.png
            content_type: image/png
            size: 1000000
            preview_url: https://example.com/image_preview.webp
            width: 800
            url: https://example.com/image.png
            height: 600
          - filename: image.png
            content_type: image/png
            size: 1000000
            preview_url: https://example.com/image_preview.webp
            width: 800
            url: https://example.com/image.png
            height: 600
          updated_at: updated_at
          author:
            name: FancyUserName
            avatar:
              content_type: image/webp
              size: 245678
              width: 128
              id: 2230469276416868352
              url: https://cdn.example.com/avatars/2230/2231.webp
              height: 128
            id: 2230469276416868352
            discriminator: uniquename
          id: 2230469276416868352
          type: 0
          channel_id: 2230469276416868352
          content: Hello world!
        - attachments:
          - filename: image.png
            content_type: image/png
            size: 1000000
            preview_url: https://example.com/image_preview.webp
            width: 800
            url: https://example.com/image.png
            height: 600
          - filename: image.png
            content_type: image/png
            size: 1000000
            preview_url: https://example.com/image_preview.webp
            width: 800
            url: https://example.com/image.png
            height: 600
          updated_at: updated_at
          author:
            name: FancyUserName
            avatar:
              content_type: image/webp
              size: 245678
              width: 128
              id: 2230469276416868352
              url: https://cdn.example.com/avatars/2230/2231.webp
              height: 128
            id: 2230469276416868352
            discriminator: uniquename
          id: 2230469276416868352
          type: 0
          channel_id: 2230469276416868352
          content: Hello world!
      properties:
        messages:
          description: List of messages
          items:
            $ref: '#/components/schemas/dto.Message'
          type: array
          uniqueItems: false
        pages:
          description: Total number of pages with current search parameters
          type: integer
    sfu.ChannelAlive:
      properties:
        channel_id:
          type: integer
        guild_id:
          type: integer
    sfu.ChannelUserJoin:
      properties:
        channel_id:
          type: integer
        guild_id:
          type: integer
        user_id:
          type: integer
    sfu.ChannelUserLeave:
      properties:
        channel_id:
          type: integer
        guild_id:
          type: integer
        user_id:
          type: integer
    sfu.HeartbeatRequest:
      properties:
        id:
          type: string
        load:
          type: integer
        region:
          type: string
        url:
          type: string
    user.CreateAvatarRequest:
      properties:
        content_type:
          example: image/png
          type: string
        file_size:
          example: 120000
          type: integer
    user.CreateDMManyRequest:
      properties:
        channel_id:
          type: integer
        recipients_id:
          items:
            type: integer
          type: array
          uniqueItems: false
    user.CreateDMRequest:
      properties:
        recipient_id:
          type: integer
    user.CreateFriendRequestRequest:
      properties:
        discriminator:
          type: string
    user.FriendRequestAction:
      properties:
        user_id:
          type: integer
    user.ModifyUserRequest:
      properties:
        avatar:
          description: Avatar ID.
          example: 2230469276416868352
          type: integer
        name:
          description: User name.
          example: NewFancyName
          type: string
    user.UnfriendRequest:
      properties:
        user_id:
          type: integer
    user.UserSettingsResponse:
      example:
        settings:
          favorite_gifs:
          - favorite_gifs
          - favorite_gifs
          dm_channels:
          - hidden: true
            user_id: 2
            hidden_after: 3
            channel_id: 9
          - hidden: true
            user_id: 2
            hidden_after: 3
            channel_id: 9
          appearance:
            chat_font_scale: 1
            color_scheme: color_scheme
            chat_spacing: 5
          devices:
            audio_input_level: 5.637376656633329
            auto_gain_control: true
            audio_output_device: audio_output_device
            audio_output_level: 7.061401241503109
            audio_input_threshold: 2.3021358869347655
            echo_cancellation: true
            video_device: video_device
            noise_suppression: true
            audio_input_device: audio_input_device
          guilds:
          - selected_channel: 7
            guild_id: 1
            position: 6
            notifications:
              roles: true
              global: true
              muted: true
              notifications: 1
          - selected_channel: 7
            guild_id: 1
            position: 6
            notifications:
              roles: true
              global: true
              muted: true
              notifications: 1
          language: language
          forced_presence: forced_presence
          guild_folders:
          - color: 4
            guilds:
            - 7
            - 7
            name: name
            position: 1
          - color: 4
            guilds:
            - 7
            - 7
            name: name
            position: 1
          status:
            custom_status_text: custom_status_text
            status: status
        guilds:
        - owner: 2230469276416868352
          public: false
          permissions: 0
          icon:
            width: 128
            filesize: 12345
            id: 2230469276416868352
            url: https://cdn.example.com/icons/2230/2231.webp
            height: 128
          name: My Guild
          id: 2230469276416868352
        - owner: 2230469276416868352
          public: false
          permissions: 0
          icon:
            width: 128
            filesize: 12345
            id: 2230469276416868352
            url: https://cdn.example.com/icons/2230/2231.webp
            height: 128
          name: My Guild
          id: 2230469276416868352
        read_states:
          key: 6
        version: 1
        guilds_last_messages:
          key:
            key: 0
      properties:
        guilds:
          items:
            $ref: '#/components/schemas/dto.Guild'
          type: array
          uniqueItems: false
        guilds_last_messages:
          additionalProperties:
            additionalProperties:
              type: integer
        read_states:
          additionalProperties:
            type: integer
        settings:
          $ref: '#/components/schemas/model.UserSettingsData'
        version:
          type: integer
    voice.Region:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
    voice.VoiceRegionsResponse:
      example:
        regions:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        regions:
          items:
            $ref: '#/components/schemas/voice.Region'
          type: array
          uniqueItems: false
  securitySchemes:
    bearerauth:
      bearerFormat: JWT
      scheme: bearer
      type: http
