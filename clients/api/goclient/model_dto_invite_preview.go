/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the DtoInvitePreview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DtoInvitePreview{}

// DtoInvitePreview struct for DtoInvitePreview
type DtoInvitePreview struct {
	AuthorId     *int32    `json:"author_id,omitempty"`
	Code         *string   `json:"code,omitempty"`
	CreatedAt    *string   `json:"created_at,omitempty"`
	ExpiresAt    *string   `json:"expires_at,omitempty"`
	Guild        *DtoGuild `json:"guild,omitempty"`
	Id           *int32    `json:"id,omitempty"`
	MembersCount *int32    `json:"members_count,omitempty"`
}

// NewDtoInvitePreview instantiates a new DtoInvitePreview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDtoInvitePreview() *DtoInvitePreview {
	this := DtoInvitePreview{}
	return &this
}

// NewDtoInvitePreviewWithDefaults instantiates a new DtoInvitePreview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDtoInvitePreviewWithDefaults() *DtoInvitePreview {
	this := DtoInvitePreview{}
	return &this
}

// GetAuthorId returns the AuthorId field value if set, zero value otherwise.
func (o *DtoInvitePreview) GetAuthorId() int32 {
	if o == nil || IsNil(o.AuthorId) {
		var ret int32
		return ret
	}
	return *o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvitePreview) GetAuthorIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AuthorId) {
		return nil, false
	}
	return o.AuthorId, true
}

// HasAuthorId returns a boolean if a field has been set.
func (o *DtoInvitePreview) HasAuthorId() bool {
	if o != nil && !IsNil(o.AuthorId) {
		return true
	}

	return false
}

// SetAuthorId gets a reference to the given int32 and assigns it to the AuthorId field.
func (o *DtoInvitePreview) SetAuthorId(v int32) {
	o.AuthorId = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *DtoInvitePreview) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvitePreview) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *DtoInvitePreview) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *DtoInvitePreview) SetCode(v string) {
	o.Code = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DtoInvitePreview) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvitePreview) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DtoInvitePreview) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *DtoInvitePreview) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *DtoInvitePreview) GetExpiresAt() string {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret string
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvitePreview) GetExpiresAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *DtoInvitePreview) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given string and assigns it to the ExpiresAt field.
func (o *DtoInvitePreview) SetExpiresAt(v string) {
	o.ExpiresAt = &v
}

// GetGuild returns the Guild field value if set, zero value otherwise.
func (o *DtoInvitePreview) GetGuild() DtoGuild {
	if o == nil || IsNil(o.Guild) {
		var ret DtoGuild
		return ret
	}
	return *o.Guild
}

// GetGuildOk returns a tuple with the Guild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvitePreview) GetGuildOk() (*DtoGuild, bool) {
	if o == nil || IsNil(o.Guild) {
		return nil, false
	}
	return o.Guild, true
}

// HasGuild returns a boolean if a field has been set.
func (o *DtoInvitePreview) HasGuild() bool {
	if o != nil && !IsNil(o.Guild) {
		return true
	}

	return false
}

// SetGuild gets a reference to the given DtoGuild and assigns it to the Guild field.
func (o *DtoInvitePreview) SetGuild(v DtoGuild) {
	o.Guild = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DtoInvitePreview) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvitePreview) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DtoInvitePreview) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *DtoInvitePreview) SetId(v int32) {
	o.Id = &v
}

// GetMembersCount returns the MembersCount field value if set, zero value otherwise.
func (o *DtoInvitePreview) GetMembersCount() int32 {
	if o == nil || IsNil(o.MembersCount) {
		var ret int32
		return ret
	}
	return *o.MembersCount
}

// GetMembersCountOk returns a tuple with the MembersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DtoInvitePreview) GetMembersCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MembersCount) {
		return nil, false
	}
	return o.MembersCount, true
}

// HasMembersCount returns a boolean if a field has been set.
func (o *DtoInvitePreview) HasMembersCount() bool {
	if o != nil && !IsNil(o.MembersCount) {
		return true
	}

	return false
}

// SetMembersCount gets a reference to the given int32 and assigns it to the MembersCount field.
func (o *DtoInvitePreview) SetMembersCount(v int32) {
	o.MembersCount = &v
}

func (o DtoInvitePreview) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DtoInvitePreview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorId) {
		toSerialize["author_id"] = o.AuthorId
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if !IsNil(o.Guild) {
		toSerialize["guild"] = o.Guild
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MembersCount) {
		toSerialize["members_count"] = o.MembersCount
	}
	return toSerialize, nil
}

type NullableDtoInvitePreview struct {
	value *DtoInvitePreview
	isSet bool
}

func (v NullableDtoInvitePreview) Get() *DtoInvitePreview {
	return v.value
}

func (v *NullableDtoInvitePreview) Set(val *DtoInvitePreview) {
	v.value = val
	v.isSet = true
}

func (v NullableDtoInvitePreview) IsSet() bool {
	return v.isSet
}

func (v *NullableDtoInvitePreview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDtoInvitePreview(val *DtoInvitePreview) *NullableDtoInvitePreview {
	return &NullableDtoInvitePreview{value: val, isSet: true}
}

func (v NullableDtoInvitePreview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDtoInvitePreview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
