/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the GuildCreateIconRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GuildCreateIconRequest{}

// GuildCreateIconRequest struct for GuildCreateIconRequest
type GuildCreateIconRequest struct {
	ContentType *string `json:"content_type,omitempty"`
	FileSize    *int32  `json:"file_size,omitempty"`
}

// NewGuildCreateIconRequest instantiates a new GuildCreateIconRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuildCreateIconRequest() *GuildCreateIconRequest {
	this := GuildCreateIconRequest{}
	return &this
}

// NewGuildCreateIconRequestWithDefaults instantiates a new GuildCreateIconRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuildCreateIconRequestWithDefaults() *GuildCreateIconRequest {
	this := GuildCreateIconRequest{}
	return &this
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *GuildCreateIconRequest) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuildCreateIconRequest) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *GuildCreateIconRequest) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *GuildCreateIconRequest) SetContentType(v string) {
	o.ContentType = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *GuildCreateIconRequest) GetFileSize() int32 {
	if o == nil || IsNil(o.FileSize) {
		var ret int32
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuildCreateIconRequest) GetFileSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *GuildCreateIconRequest) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given int32 and assigns it to the FileSize field.
func (o *GuildCreateIconRequest) SetFileSize(v int32) {
	o.FileSize = &v
}

func (o GuildCreateIconRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GuildCreateIconRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContentType) {
		toSerialize["content_type"] = o.ContentType
	}
	if !IsNil(o.FileSize) {
		toSerialize["file_size"] = o.FileSize
	}
	return toSerialize, nil
}

type NullableGuildCreateIconRequest struct {
	value *GuildCreateIconRequest
	isSet bool
}

func (v NullableGuildCreateIconRequest) Get() *GuildCreateIconRequest {
	return v.value
}

func (v *NullableGuildCreateIconRequest) Set(val *GuildCreateIconRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGuildCreateIconRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGuildCreateIconRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuildCreateIconRequest(val *GuildCreateIconRequest) *NullableGuildCreateIconRequest {
	return &NullableGuildCreateIconRequest{value: val, isSet: true}
}

func (v NullableGuildCreateIconRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuildCreateIconRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
