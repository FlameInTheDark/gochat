/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the UserCreateFriendRequestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserCreateFriendRequestRequest{}

// UserCreateFriendRequestRequest struct for UserCreateFriendRequestRequest
type UserCreateFriendRequestRequest struct {
	Discriminator *string `json:"discriminator,omitempty"`
}

// NewUserCreateFriendRequestRequest instantiates a new UserCreateFriendRequestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCreateFriendRequestRequest() *UserCreateFriendRequestRequest {
	this := UserCreateFriendRequestRequest{}
	return &this
}

// NewUserCreateFriendRequestRequestWithDefaults instantiates a new UserCreateFriendRequestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCreateFriendRequestRequestWithDefaults() *UserCreateFriendRequestRequest {
	this := UserCreateFriendRequestRequest{}
	return &this
}

// GetDiscriminator returns the Discriminator field value if set, zero value otherwise.
func (o *UserCreateFriendRequestRequest) GetDiscriminator() string {
	if o == nil || IsNil(o.Discriminator) {
		var ret string
		return ret
	}
	return *o.Discriminator
}

// GetDiscriminatorOk returns a tuple with the Discriminator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreateFriendRequestRequest) GetDiscriminatorOk() (*string, bool) {
	if o == nil || IsNil(o.Discriminator) {
		return nil, false
	}
	return o.Discriminator, true
}

// HasDiscriminator returns a boolean if a field has been set.
func (o *UserCreateFriendRequestRequest) HasDiscriminator() bool {
	if o != nil && !IsNil(o.Discriminator) {
		return true
	}

	return false
}

// SetDiscriminator gets a reference to the given string and assigns it to the Discriminator field.
func (o *UserCreateFriendRequestRequest) SetDiscriminator(v string) {
	o.Discriminator = &v
}

func (o UserCreateFriendRequestRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserCreateFriendRequestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Discriminator) {
		toSerialize["discriminator"] = o.Discriminator
	}
	return toSerialize, nil
}

type NullableUserCreateFriendRequestRequest struct {
	value *UserCreateFriendRequestRequest
	isSet bool
}

func (v NullableUserCreateFriendRequestRequest) Get() *UserCreateFriendRequestRequest {
	return v.value
}

func (v *NullableUserCreateFriendRequestRequest) Set(val *UserCreateFriendRequestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCreateFriendRequestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCreateFriendRequestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCreateFriendRequestRequest(val *UserCreateFriendRequestRequest) *NullableUserCreateFriendRequestRequest {
	return &NullableUserCreateFriendRequestRequest{value: val, isSet: true}
}

func (v NullableUserCreateFriendRequestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCreateFriendRequestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
