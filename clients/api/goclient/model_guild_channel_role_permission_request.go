/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the GuildChannelRolePermissionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GuildChannelRolePermissionRequest{}

// GuildChannelRolePermissionRequest struct for GuildChannelRolePermissionRequest
type GuildChannelRolePermissionRequest struct {
	// Allowed permission bits mask
	Accept *int32 `json:"accept,omitempty"`
	// Denied permission bits mask
	Deny *int32 `json:"deny,omitempty"`
}

// NewGuildChannelRolePermissionRequest instantiates a new GuildChannelRolePermissionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuildChannelRolePermissionRequest() *GuildChannelRolePermissionRequest {
	this := GuildChannelRolePermissionRequest{}
	return &this
}

// NewGuildChannelRolePermissionRequestWithDefaults instantiates a new GuildChannelRolePermissionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuildChannelRolePermissionRequestWithDefaults() *GuildChannelRolePermissionRequest {
	this := GuildChannelRolePermissionRequest{}
	return &this
}

// GetAccept returns the Accept field value if set, zero value otherwise.
func (o *GuildChannelRolePermissionRequest) GetAccept() int32 {
	if o == nil || IsNil(o.Accept) {
		var ret int32
		return ret
	}
	return *o.Accept
}

// GetAcceptOk returns a tuple with the Accept field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuildChannelRolePermissionRequest) GetAcceptOk() (*int32, bool) {
	if o == nil || IsNil(o.Accept) {
		return nil, false
	}
	return o.Accept, true
}

// HasAccept returns a boolean if a field has been set.
func (o *GuildChannelRolePermissionRequest) HasAccept() bool {
	if o != nil && !IsNil(o.Accept) {
		return true
	}

	return false
}

// SetAccept gets a reference to the given int32 and assigns it to the Accept field.
func (o *GuildChannelRolePermissionRequest) SetAccept(v int32) {
	o.Accept = &v
}

// GetDeny returns the Deny field value if set, zero value otherwise.
func (o *GuildChannelRolePermissionRequest) GetDeny() int32 {
	if o == nil || IsNil(o.Deny) {
		var ret int32
		return ret
	}
	return *o.Deny
}

// GetDenyOk returns a tuple with the Deny field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuildChannelRolePermissionRequest) GetDenyOk() (*int32, bool) {
	if o == nil || IsNil(o.Deny) {
		return nil, false
	}
	return o.Deny, true
}

// HasDeny returns a boolean if a field has been set.
func (o *GuildChannelRolePermissionRequest) HasDeny() bool {
	if o != nil && !IsNil(o.Deny) {
		return true
	}

	return false
}

// SetDeny gets a reference to the given int32 and assigns it to the Deny field.
func (o *GuildChannelRolePermissionRequest) SetDeny(v int32) {
	o.Deny = &v
}

func (o GuildChannelRolePermissionRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GuildChannelRolePermissionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Accept) {
		toSerialize["accept"] = o.Accept
	}
	if !IsNil(o.Deny) {
		toSerialize["deny"] = o.Deny
	}
	return toSerialize, nil
}

type NullableGuildChannelRolePermissionRequest struct {
	value *GuildChannelRolePermissionRequest
	isSet bool
}

func (v NullableGuildChannelRolePermissionRequest) Get() *GuildChannelRolePermissionRequest {
	return v.value
}

func (v *NullableGuildChannelRolePermissionRequest) Set(val *GuildChannelRolePermissionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGuildChannelRolePermissionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGuildChannelRolePermissionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuildChannelRolePermissionRequest(val *GuildChannelRolePermissionRequest) *NullableGuildChannelRolePermissionRequest {
	return &NullableGuildChannelRolePermissionRequest{value: val, isSet: true}
}

func (v NullableGuildChannelRolePermissionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuildChannelRolePermissionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
