/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the WebhookS3Identity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookS3Identity{}

// WebhookS3Identity struct for WebhookS3Identity
type WebhookS3Identity struct {
	PrincipalId *string `json:"principalId,omitempty"`
}

// NewWebhookS3Identity instantiates a new WebhookS3Identity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookS3Identity() *WebhookS3Identity {
	this := WebhookS3Identity{}
	return &this
}

// NewWebhookS3IdentityWithDefaults instantiates a new WebhookS3Identity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookS3IdentityWithDefaults() *WebhookS3Identity {
	this := WebhookS3Identity{}
	return &this
}

// GetPrincipalId returns the PrincipalId field value if set, zero value otherwise.
func (o *WebhookS3Identity) GetPrincipalId() string {
	if o == nil || IsNil(o.PrincipalId) {
		var ret string
		return ret
	}
	return *o.PrincipalId
}

// GetPrincipalIdOk returns a tuple with the PrincipalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookS3Identity) GetPrincipalIdOk() (*string, bool) {
	if o == nil || IsNil(o.PrincipalId) {
		return nil, false
	}
	return o.PrincipalId, true
}

// HasPrincipalId returns a boolean if a field has been set.
func (o *WebhookS3Identity) HasPrincipalId() bool {
	if o != nil && !IsNil(o.PrincipalId) {
		return true
	}

	return false
}

// SetPrincipalId gets a reference to the given string and assigns it to the PrincipalId field.
func (o *WebhookS3Identity) SetPrincipalId(v string) {
	o.PrincipalId = &v
}

func (o WebhookS3Identity) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookS3Identity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PrincipalId) {
		toSerialize["principalId"] = o.PrincipalId
	}
	return toSerialize, nil
}

type NullableWebhookS3Identity struct {
	value *WebhookS3Identity
	isSet bool
}

func (v NullableWebhookS3Identity) Get() *WebhookS3Identity {
	return v.value
}

func (v *NullableWebhookS3Identity) Set(val *WebhookS3Identity) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookS3Identity) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookS3Identity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookS3Identity(val *WebhookS3Identity) *NullableWebhookS3Identity {
	return &NullableWebhookS3Identity{value: val, isSet: true}
}

func (v NullableWebhookS3Identity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookS3Identity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
