/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the SearchMessageSearchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchMessageSearchRequest{}

// SearchMessageSearchRequest struct for SearchMessageSearchRequest
type SearchMessageSearchRequest struct {
	// Author ID to search by.
	AuthorId *int32 `json:"author_id,omitempty"`
	// Channel ID to search in. Required.
	ChannelId *int32 `json:"channel_id,omitempty"`
	// Content contains a string to search for. Might be empty if need to search by other parameters.
	Content *string `json:"content,omitempty"`
	// List of specific features to search for.
	Has []string `json:"has,omitempty"`
	// Mentions contains a list of int64 user IDs.
	Mentions []int32 `json:"mentions,omitempty"`
	// Page number to get. Starts from 0.
	Page *int32 `json:"page,omitempty"`
}

// NewSearchMessageSearchRequest instantiates a new SearchMessageSearchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchMessageSearchRequest() *SearchMessageSearchRequest {
	this := SearchMessageSearchRequest{}
	var page int32 = 0
	this.Page = &page
	return &this
}

// NewSearchMessageSearchRequestWithDefaults instantiates a new SearchMessageSearchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchMessageSearchRequestWithDefaults() *SearchMessageSearchRequest {
	this := SearchMessageSearchRequest{}
	var page int32 = 0
	this.Page = &page
	return &this
}

// GetAuthorId returns the AuthorId field value if set, zero value otherwise.
func (o *SearchMessageSearchRequest) GetAuthorId() int32 {
	if o == nil || IsNil(o.AuthorId) {
		var ret int32
		return ret
	}
	return *o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchMessageSearchRequest) GetAuthorIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AuthorId) {
		return nil, false
	}
	return o.AuthorId, true
}

// HasAuthorId returns a boolean if a field has been set.
func (o *SearchMessageSearchRequest) HasAuthorId() bool {
	if o != nil && !IsNil(o.AuthorId) {
		return true
	}

	return false
}

// SetAuthorId gets a reference to the given int32 and assigns it to the AuthorId field.
func (o *SearchMessageSearchRequest) SetAuthorId(v int32) {
	o.AuthorId = &v
}

// GetChannelId returns the ChannelId field value if set, zero value otherwise.
func (o *SearchMessageSearchRequest) GetChannelId() int32 {
	if o == nil || IsNil(o.ChannelId) {
		var ret int32
		return ret
	}
	return *o.ChannelId
}

// GetChannelIdOk returns a tuple with the ChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchMessageSearchRequest) GetChannelIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ChannelId) {
		return nil, false
	}
	return o.ChannelId, true
}

// HasChannelId returns a boolean if a field has been set.
func (o *SearchMessageSearchRequest) HasChannelId() bool {
	if o != nil && !IsNil(o.ChannelId) {
		return true
	}

	return false
}

// SetChannelId gets a reference to the given int32 and assigns it to the ChannelId field.
func (o *SearchMessageSearchRequest) SetChannelId(v int32) {
	o.ChannelId = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *SearchMessageSearchRequest) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchMessageSearchRequest) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *SearchMessageSearchRequest) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *SearchMessageSearchRequest) SetContent(v string) {
	o.Content = &v
}

// GetHas returns the Has field value if set, zero value otherwise.
func (o *SearchMessageSearchRequest) GetHas() []string {
	if o == nil || IsNil(o.Has) {
		var ret []string
		return ret
	}
	return o.Has
}

// GetHasOk returns a tuple with the Has field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchMessageSearchRequest) GetHasOk() ([]string, bool) {
	if o == nil || IsNil(o.Has) {
		return nil, false
	}
	return o.Has, true
}

// HasHas returns a boolean if a field has been set.
func (o *SearchMessageSearchRequest) HasHas() bool {
	if o != nil && !IsNil(o.Has) {
		return true
	}

	return false
}

// SetHas gets a reference to the given []string and assigns it to the Has field.
func (o *SearchMessageSearchRequest) SetHas(v []string) {
	o.Has = v
}

// GetMentions returns the Mentions field value if set, zero value otherwise.
func (o *SearchMessageSearchRequest) GetMentions() []int32 {
	if o == nil || IsNil(o.Mentions) {
		var ret []int32
		return ret
	}
	return o.Mentions
}

// GetMentionsOk returns a tuple with the Mentions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchMessageSearchRequest) GetMentionsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Mentions) {
		return nil, false
	}
	return o.Mentions, true
}

// HasMentions returns a boolean if a field has been set.
func (o *SearchMessageSearchRequest) HasMentions() bool {
	if o != nil && !IsNil(o.Mentions) {
		return true
	}

	return false
}

// SetMentions gets a reference to the given []int32 and assigns it to the Mentions field.
func (o *SearchMessageSearchRequest) SetMentions(v []int32) {
	o.Mentions = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *SearchMessageSearchRequest) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchMessageSearchRequest) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *SearchMessageSearchRequest) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *SearchMessageSearchRequest) SetPage(v int32) {
	o.Page = &v
}

func (o SearchMessageSearchRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchMessageSearchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorId) {
		toSerialize["author_id"] = o.AuthorId
	}
	if !IsNil(o.ChannelId) {
		toSerialize["channel_id"] = o.ChannelId
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Has) {
		toSerialize["has"] = o.Has
	}
	if !IsNil(o.Mentions) {
		toSerialize["mentions"] = o.Mentions
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	return toSerialize, nil
}

type NullableSearchMessageSearchRequest struct {
	value *SearchMessageSearchRequest
	isSet bool
}

func (v NullableSearchMessageSearchRequest) Get() *SearchMessageSearchRequest {
	return v.value
}

func (v *NullableSearchMessageSearchRequest) Set(val *SearchMessageSearchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchMessageSearchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchMessageSearchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchMessageSearchRequest(val *SearchMessageSearchRequest) *NullableSearchMessageSearchRequest {
	return &NullableSearchMessageSearchRequest{value: val, isSet: true}
}

func (v NullableSearchMessageSearchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchMessageSearchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
