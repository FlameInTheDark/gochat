/*
GoChat API

This is an API for the GoChat

API version: 1.0
Contact: viktorfreedom@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goclient

import (
	"encoding/json"
)

// checks if the WebhookS3Bucket type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookS3Bucket{}

// WebhookS3Bucket struct for WebhookS3Bucket
type WebhookS3Bucket struct {
	Arn           *string            `json:"arn,omitempty"`
	Name          *string            `json:"name,omitempty"`
	OwnerIdentity *WebhookS3Identity `json:"ownerIdentity,omitempty"`
}

// NewWebhookS3Bucket instantiates a new WebhookS3Bucket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookS3Bucket() *WebhookS3Bucket {
	this := WebhookS3Bucket{}
	return &this
}

// NewWebhookS3BucketWithDefaults instantiates a new WebhookS3Bucket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookS3BucketWithDefaults() *WebhookS3Bucket {
	this := WebhookS3Bucket{}
	return &this
}

// GetArn returns the Arn field value if set, zero value otherwise.
func (o *WebhookS3Bucket) GetArn() string {
	if o == nil || IsNil(o.Arn) {
		var ret string
		return ret
	}
	return *o.Arn
}

// GetArnOk returns a tuple with the Arn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookS3Bucket) GetArnOk() (*string, bool) {
	if o == nil || IsNil(o.Arn) {
		return nil, false
	}
	return o.Arn, true
}

// HasArn returns a boolean if a field has been set.
func (o *WebhookS3Bucket) HasArn() bool {
	if o != nil && !IsNil(o.Arn) {
		return true
	}

	return false
}

// SetArn gets a reference to the given string and assigns it to the Arn field.
func (o *WebhookS3Bucket) SetArn(v string) {
	o.Arn = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WebhookS3Bucket) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookS3Bucket) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WebhookS3Bucket) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WebhookS3Bucket) SetName(v string) {
	o.Name = &v
}

// GetOwnerIdentity returns the OwnerIdentity field value if set, zero value otherwise.
func (o *WebhookS3Bucket) GetOwnerIdentity() WebhookS3Identity {
	if o == nil || IsNil(o.OwnerIdentity) {
		var ret WebhookS3Identity
		return ret
	}
	return *o.OwnerIdentity
}

// GetOwnerIdentityOk returns a tuple with the OwnerIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookS3Bucket) GetOwnerIdentityOk() (*WebhookS3Identity, bool) {
	if o == nil || IsNil(o.OwnerIdentity) {
		return nil, false
	}
	return o.OwnerIdentity, true
}

// HasOwnerIdentity returns a boolean if a field has been set.
func (o *WebhookS3Bucket) HasOwnerIdentity() bool {
	if o != nil && !IsNil(o.OwnerIdentity) {
		return true
	}

	return false
}

// SetOwnerIdentity gets a reference to the given WebhookS3Identity and assigns it to the OwnerIdentity field.
func (o *WebhookS3Bucket) SetOwnerIdentity(v WebhookS3Identity) {
	o.OwnerIdentity = &v
}

func (o WebhookS3Bucket) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookS3Bucket) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Arn) {
		toSerialize["arn"] = o.Arn
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OwnerIdentity) {
		toSerialize["ownerIdentity"] = o.OwnerIdentity
	}
	return toSerialize, nil
}

type NullableWebhookS3Bucket struct {
	value *WebhookS3Bucket
	isSet bool
}

func (v NullableWebhookS3Bucket) Get() *WebhookS3Bucket {
	return v.value
}

func (v *NullableWebhookS3Bucket) Set(val *WebhookS3Bucket) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookS3Bucket) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookS3Bucket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookS3Bucket(val *WebhookS3Bucket) *NullableWebhookS3Bucket {
	return &NullableWebhookS3Bucket{value: val, isSet: true}
}

func (v NullableWebhookS3Bucket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookS3Bucket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
