name: Build Release Images

# Trigger when a release is published
on:
  release:
    types: [published]

permissions:
  contents: read # Only read access required to checkout code
  packages: write # Needed to push container images to GHCR

jobs:
  build-images:
    name: Build and Push Container Images
    runs-on: ubuntu-latest
    steps:
      # Checkout the specific tag associated with the release
      - name: Check out code at specific tag
        uses: actions/checkout@v4
        with:
          # github.ref is the tag name for release events (e.g., refs/tags/v1.0.0)
          ref: ${{ github.ref }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # Uses the workflow's GITHUB_TOKEN

      - name: Extract metadata for API image
        id: meta_api
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/gochat-api
          tags: |
            type=ref,event=tag
            # Always tag as latest on release
            type=raw,value=latest,enable=true

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: . # Build context is the repository root
          file: ./api.Dockerfile # Dockerfile is in the root
          push: true
          tags: ${{ steps.meta_api.outputs.tags }}
          labels: ${{ steps.meta_api.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata for WS image
        id: meta_ws
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/gochat-ws
          tags: |
            type=ref,event=tag
            # Always tag as latest on release
            type=raw,value=latest,enable=true

      - name: Build and push WS image
        uses: docker/build-push-action@v5
        with:
          context: . # Build context is the repository root
          file: ./ws.Dockerfile # Dockerfile is in the root
          push: true
          tags: ${{ steps.meta_ws.outputs.tags }}
          labels: ${{ steps.meta_ws.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata for AUTH image
        id: meta_auth
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/gochat-auth
          tags: |
            type=ref,event=tag
            # Always tag as latest on release
            type=raw,value=latest,enable=true

      - name: Build and push AUTH image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./auth.Dockerfile
          push: true
          tags: ${{ steps.meta_auth.outputs.tags }}
          labels: ${{ steps.meta_auth.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata for INDEXER image
        id: meta_indexer
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/gochat-indexer
          tags: |
            type=ref,event=tag
            # Always tag as latest on release
            type=raw,value=latest,enable=true

      - name: Build and push INDEXER image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./indexer.Dockerfile
          push: true
          tags: ${{ steps.meta_indexer.outputs.tags }}
          labels: ${{ steps.meta_indexer.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata for ATTACHMENTS image
        id: meta_attachments
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/gochat-attachments
          tags: |
            type=ref,event=tag
            # Always tag as latest on release
            type=raw,value=latest,enable=true

      - name: Build and push ATTACHMENTS image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./attachments.Dockerfile
          push: true
          tags: ${{ steps.meta_attachments.outputs.tags }}
          labels: ${{ steps.meta_attachments.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

