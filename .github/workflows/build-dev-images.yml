name: Build Dev Images

on:
  push:
    branches:
      - dev # Trigger only on pushes to the dev branch

permissions:
  contents: read # Only needs read access to checkout code
  packages: write # Needed to push container images to GHCR

jobs:
  build-and-push-dev:
    name: Build and Push Dev Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: api
            dockerfile: api.Dockerfile
            image: gochat-api
            cache_scope: api-dev
          - service: ws
            dockerfile: ws.Dockerfile
            image: gochat-ws
            cache_scope: ws-dev
          - service: auth
            dockerfile: auth.Dockerfile
            image: gochat-auth
            cache_scope: auth-dev
          - service: indexer
            dockerfile: indexer.Dockerfile
            image: gochat-indexer
            cache_scope: indexer-dev
          - service: attachments
            dockerfile: attachments.Dockerfile
            image: gochat-attachments
            cache_scope: attachments-dev
          - service: sfu
            dockerfile: sfu.Dockerfile
            image: gochat-sfu
            cache_scope: sfu-dev
    steps:
      - name: Check out code from dev branch
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for ${{ matrix.service }} image (dev tag)
        id: meta_dev
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}
          tags: |
            type=raw,value=dev

      - name: Build and push ${{ matrix.service }} image (dev)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta_dev.outputs.tags }}
          labels: ${{ steps.meta_dev.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.cache_scope }}
          cache-to: type=gha,mode=max,scope=${{ matrix.cache_scope }}
