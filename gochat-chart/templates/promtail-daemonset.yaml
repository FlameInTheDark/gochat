{{- if .Values.promtail.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "gochat.fullname" . }}-promtail
  labels:
    {{- include "gochat.labels" . | nindent 4 }}
    app.kubernetes.io/component: promtail
spec:
  selector:
    matchLabels:
      {{- include "gochat.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: promtail
  template:
    metadata:
      labels:
        {{- include "gochat.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: promtail
    spec:
      # serviceAccountName: {{ include "gochat.serviceAccountName" . }}-promtail # If specific SA is needed for hostPath access
      terminationGracePeriodSeconds: 30
      containers:
        - name: promtail
          image: "{{ .Values.promtail.image.repository }}:{{ .Values.promtail.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.promtail.image.pullPolicy }}
          args:
            - -config.file=/etc/promtail/promtail-config.yml
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
              readOnly: true
            - name: positions
              mountPath: "{{ .Values.promtail.config.positionsFilename | dir }}" # Mount directory for positions file
              readOnly: false
            - name: {{ .Values.promtail.volumes.logs.name }}
              mountPath: {{ .Values.promtail.volumes.logs.hostPath }}
              readOnly: true
            - name: {{ .Values.promtail.volumes.dockerSocket.name }}
              mountPath: {{ .Values.promtail.volumes.dockerSocket.hostPath }}
              readOnly: true
          env:
            # Needed to query Kubernetes API for log discovery
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          ports:
            {{- if .Values.promtail.service.enabled }}
            - name: http
              containerPort: {{ .Values.promtail.service.port }}
              protocol: TCP
            {{- end }}
          # Security context might be needed depending on hostPath permissions
          # securityContext:
          #   readOnlyRootFilesystem: true
          #   runAsGroup: 0
          #   runAsUser: 0
          resources:
            {{- toYaml .Values.promtail.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "gochat.fullname" . }}-promtail
        - name: positions
          hostPath:
            path: "{{ .Values.promtail.config.positionsFilename | dir }}" # Use hostPath for positions across restarts
            type: DirectoryOrCreate
        - name: {{ .Values.promtail.volumes.logs.name }}
          hostPath:
            path: {{ .Values.promtail.volumes.logs.hostPath }}
        - name: {{ .Values.promtail.volumes.dockerSocket.name }}
          hostPath:
            path: {{ .Values.promtail.volumes.dockerSocket.hostPath }}
      {{- with .Values.promtail.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.promtail.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.promtail.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }} 