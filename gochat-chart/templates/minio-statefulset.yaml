{{- if .Values.minio.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gochat.fullname" . }}-minio
  labels:
    {{- include "gochat.labels" . | nindent 4 }}
    app.kubernetes.io/component: minio
spec:
  serviceName: {{ include "gochat.fullname" . }}-minio-headless
  replicas: 1
  selector:
    matchLabels:
      {{- include "gochat.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: minio
  template:
    metadata:
      labels:
        {{- include "gochat.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: minio
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: minio
          image: "{{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.minio.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |-
              minio server /data --console-address :{{ .Values.minio.service.consolePort }}
          ports:
            - name: api
              containerPort: {{ .Values.minio.service.apiPort }}
              protocol: TCP
            - name: console
              containerPort: {{ .Values.minio.service.consolePort }}
              protocol: TCP
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "gochat.fullname" . }}-minio
                  key: MINIO_ROOT_USER
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "gochat.fullname" . }}-minio
                  key: MINIO_ROOT_PASSWORD
          volumeMounts:
            - name: data
              mountPath: /data
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: api
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: api
            initialDelaySeconds: 5
          resources:
            {{- toYaml .Values.minio.resources | nindent 12 }}
      {{- with .Values.minio.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.minio.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.minio.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.minio.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.minio.persistence.size | quote }}
      {{- if .Values.minio.persistence.storageClass }}
      {{- if (eq "-" .Values.minio.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.minio.persistence.storageClass }}"
      {{- end }}
      {{- end }}
  {{- end }}
{{- end }} 