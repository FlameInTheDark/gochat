{{- if .Values.nginx.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "gochat.fullname" . }}-nginx
  labels:
    {{- include "gochat.labels" . | nindent 4 }}
    app.kubernetes.io/component: nginx
data:
  nginx.conf: |-
    # Note: The 'events {}' block is often required at the top level in nginx.conf
    {{- $fullname := include "gochat.fullname" . -}}
    {{- $nginxConfig := .Values.nginx.config -}}
    events {}

    http {
        # Increase proxy buffer size if needed for large headers/requests
        # proxy_buffer_size   128k;
        # proxy_buffers   4 256k;
        # proxy_busy_buffers_size   256k;

        server {
            listen {{ .Values.nginx.service.httpPort }};
            # Add listen [::]:{{ .Values.nginx.service.httpPort }}; for IPv6 if needed

            # Add server_name directive if needed
            # Example using the first host defined in ingress values:
            # server_name {{ (first .Values.ingress.hosts).host | default "gochat.local" }};

            error_page 502 503 504 = /custom_502.html;

            location /api/v1/ {
                proxy_pass http://{{ $fullname }}-{{ $nginxConfig.apiServiceName }}:{{ $nginxConfig.apiServicePort }}/api/v1/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 60s;
                proxy_read_timeout 60s;
                proxy_send_timeout 60s;
                proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
            }

            location /media/ {
                proxy_pass http://{{ $fullname }}-{{ $nginxConfig.minioServiceName }}:{{ $nginxConfig.minioServicePort }}/media/;
                proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
                proxy_set_header Host $host; # Important if MinIO uses host-based buckets/access
            }

            location /icons/ {
                proxy_pass http://{{ $fullname }}-{{ $nginxConfig.minioServiceName }}:{{ $nginxConfig.minioServicePort }}/icons/;
                proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
                proxy_set_header Host $host;
            }

            location /avatars/ {
                proxy_pass http://{{ $fullname }}-{{ $nginxConfig.minioServiceName }}:{{ $nginxConfig.minioServicePort }}/avatars/;
                proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
                proxy_set_header Host $host;
            }

            location /ws/ {
                proxy_pass http://{{ $fullname }}-{{ $nginxConfig.wsServiceName }}:{{ $nginxConfig.wsServicePort }}/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_read_timeout 86400s; # Long timeout for WebSockets
                proxy_send_timeout 86400s;
                proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
            }

            location = /custom_502.html {
                internal;
                default_type text/html;
                return 502 "<html><body><h1>Service Temporarily Unavailable</h1><p>Please try again later.</p></body></html>";
            }

            # Add location for root / health check if desired
            # location / {
            #   return 200 'OK';
            #   add_header Content-Type text/plain;
            # }
        }
        # Add server block for HTTPS (port 443) if TLS is configured
    }
{{- end }} 