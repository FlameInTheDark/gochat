{{- if .Values.scylla.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gochat.fullname" . }}-scylla
  labels:
    {{- include "gochat.labels" . | nindent 4 }}
    app.kubernetes.io/component: scylla
spec:
  serviceName: {{ include "gochat.fullname" . }}-scylla-headless
  replicas: 1 # Start with 1 replica for SimpleStrategy, adjust if needed
  selector:
    matchLabels:
      {{- include "gochat.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: scylla
  template:
    metadata:
      labels:
        {{- include "gochat.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: scylla
    spec:
      terminationGracePeriodSeconds: 180 # Recommended by ScyllaDB docs
      containers:
        - name: scylla
          image: "{{ .Values.scylla.image.repository }}:{{ .Values.scylla.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.scylla.image.pullPolicy }}
          ports:
            - name: cql
              containerPort: {{ .Values.scylla.service.cqlPort }}
              protocol: TCP
            - name: thrift
              containerPort: {{ .Values.scylla.service.thriftPort }}
              protocol: TCP
            # Add other necessary ports like internode, JMX if clustering
          env:
            - name: SCYLLA_SEEDS
              value: {{ include "gochat.fullname" . }}-scylla-0.{{ include "gochat.fullname" . }}-scylla-headless # Self-seed for single node
            - name: SCYLLA_DEVELOPER_MODE
              value: "{{ .Values.scylla.environment.SCYLLA_DEVELOPER_MODE }}"
            # Add other env vars as needed
          volumeMounts:
            - name: data
              mountPath: {{ .Values.scylla.persistence.mountPath }}
          # ScyllaDB readiness/liveness probes are complex; starting simple
          readinessProbe:
            tcpSocket:
              port: cql
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: cql
            initialDelaySeconds: 60
            periodSeconds: 20
          resources:
            {{- toYaml .Values.scylla.resources | nindent 12 }}
      {{- with .Values.scylla.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.scylla.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.scylla.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.scylla.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.scylla.persistence.size | quote }}
      {{- if .Values.scylla.persistence.storageClass }}
      {{- if (eq "-" .Values.scylla.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.scylla.persistence.storageClass }}"
      {{- end }}
      {{- end }}
  {{- end }}
{{- end }} 